// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/doc.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/server/responses.gotmpl
// templates/structfield.gotmpl
// templates/swagger_json_embed.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4d\x73\xe3\x36\x0c\x3d\xaf\x7e\x05\xea\xd9\x64\x2c\x57\x2b\xdf\x35\x93\x43\x66\xb3\x87\x5c\x36\x99\x24\xd3\x9e\x19\x09\x92\x38\xb1\x28\x95\xa4\x92\x71\x35\xfa\xef\x05\x3f\xfd\x11\xbb\x75\x6f\x9b\x43\x4c\x12\xe0\xc3\xc3\x03\x08\x0d\xac\x7c\x63\x0d\xc2\x34\x41\xfe\x93\x75\x08\xf3\x9c\x24\xeb\x35\xbc\xb4\x5c\x41\xcd\x37\x08\x1f\x4c\x41\x83\x02\x25\xd3\x58\xc1\xeb\x16\x74\x8b\xa0\x3e\x58\xd3\xa0\x04\xdd\xf7\x9b\xdc\xf8\xff\xa8\xb8\xe6\xa2\x21\x63\xb8\xd7\xf1\xa6\xd5\x30\xc8\xfe\x1d\xa1\x1e\xb5\x85\x6a\x51\xc0\xb6\x1f\x41\xe2\x37\x39\x8a\x03\xa4\x10\x02\xca\xbe\xeb\x98\xa8\x92\x84\x77\x43\x2f\x35\x2c\x13\x80\x85\x40\xbd\x6e\xb5\x1e\x16\x66\xd3\x70\xdd\x8e\xaf\x39\x39\xae\x9b\xfe\x9b\x07\xd8\x5f\xa2\x94\xbd\x54\x97\xf9\x9a\xdf\xcb\x3c\xcb\x0d\x47\xa1\x2f\xf3\x35\x5c\xdf\xf8\xff\x73\x5e\xbf\xb3\x0d\xaf\x48\x82\x45\x42\xd7\xa8\x20\x92\x09\xaa\x4c\x7e\x87\x35\x1b\x37\xfa\xde\xca\xa1\xa8\x40\x64\x1a\x24\x17\xba\x86\xc5\xd5\x5f\x0b\xc8\xa9\x64\xd6\x1f\x45\x05\x61\xed\xee\x7e\x7d\xc3\x6d\x06\x5f\x09\x78\x44\x28\x6e\x20\x3f\x00\x31\x56\x5a\xc1\x11\x9e\x77\x3f\x42\x4d\x6d\x5b\xfc\xc4\x0f\x28\x25\x12\x49\x05\x0c\x04\xed\xc8\xa3\x1d\xa9\x60\xfc\x6f\x8c\x1d\x04\xb7\x8f\xf7\xe0\xe4\xca\x93\x7a\x14\xa5\xb9\xb7\xd4\xc4\x49\xd9\x92\x7a\xd3\x4b\x38\xc8\xa0\xee\x65\xc7\x88\x97\xd2\xb2\xee\x74\xfe\x84\x0d\xa7\xe5\x36\x85\xd5\x77\xeb\x0b\x13\x91\x91\xa8\x47\x29\xe0\xda\x1d\x4d\x11\xaf\x00\xfd\x09\xa9\x08\x8b\x39\x31\x0d\xbd\x4a\x02\xce\x04\xbc\x86\xfc\x79\xa4\x26\x93\x5b\xa7\xc3\xe1\xce\x98\xef\x50\x95\x92\x0f\x9a\xf7\xc2\x3e\x08\xe3\x74\x78\x16\x85\x31\x8b\x8d\xc2\xe3\x6b\x0e\xf8\xf3\x1d\xe3\x3a\xcf\xc4\xed\xac\x70\x3b\xc9\x57\xeb\x44\x6f\x07\x04\x4f\x9d\x04\x19\x4b\xa7\xc4\x79\x29\xc9\x78\x46\xcb\xc4\xe5\xe1\x9b\xea\x61\x30\xaf\x8d\x78\x99\x5e\x58\xaf\x7e\x0d\x59\x4c\x23\x32\x55\xd2\x33\xd8\xd7\xe4\x22\xa1\x6c\x97\x2d\x59\xe8\x97\x14\x4e\x62\x2d\x07\x26\x59\xa7\x4e\x1b\x1f\xad\xcd\xa7\x7a\x3b\xea\xb6\x97\x64\x36\x01\x32\x60\xb4\xbd\x17\x75\x1f\xf4\xbe\xf5\xfb\x3f\x25\xd7\x28\xa7\x89\x88\xcc\x73\xba\xeb\xae\xb2\x44\xa5\x9e\x90\x4a\x22\x6c\x66\xcb\xd5\x61\xc8\x23\x8f\x40\x21\xdb\x3d\x38\x3b\xc3\xce\xe2\xa5\xd1\xcf\xf6\x83\x19\xd8\x0f\x77\x0f\x05\xfc\xe1\x47\x88\x1d\xad\x3e\xd9\x57\xa4\x8e\xa0\x41\x4b\xfe\x34\xa1\xfd\x6c\x39\x0d\x2b\x51\xd1\xa4\x89\xd8\x19\x10\x0b\x33\x37\x58\x1e\x3b\x8e\x6e\xbd\x76\x5c\x2f\xaf\xbd\x12\xb1\x91\x0c\x0f\x80\xfb\xbb\xe2\x78\x9e\xc4\xe4\xac\x83\x53\xb9\x80\x6b\xc7\xce\x1d\x3e\x21\xab\x50\xd2\xe1\xc9\xc2\x38\xeb\x14\x5f\x36\xcb\xc3\xdb\xce\x4e\x55\xcb\x22\x86\x02\x15\xb1\x74\x99\x4b\xcb\xda\xe7\x94\xfe\xd1\x45\x93\xde\x6f\x37\x20\xf8\x06\x1c\x7d\x3f\x62\xce\x0a\x44\x9e\x87\x35\x32\x60\xc9\x7f\xdf\x73\xc2\xe6\x17\xb6\x41\xba\x17\x83\x22\xd2\xcb\xdd\xf5\xba\x99\xc2\xcf\xa8\x5f\x76\x13\xa0\x35\x2f\x5a\xd9\x8a\xef\xe6\x42\xef\xbe\xae\xae\x48\x9f\x5f\xc7\x3e\xc2\xbf\x0c\xe6\xd4\xca\xb2\x57\x7d\xb8\xd9\xc5\x48\xe6\xf0\x49\xa0\xc7\xf8\xc3\xb4\xeb\xd1\xa7\xc1\x7c\x05\x6c\x1b\xc7\x6f\x40\x70\x5c\xf6\x83\x4d\x95\xe6\x12\xb5\x64\x46\xf2\x79\xa5\xa8\x6b\x50\xd6\xac\xc4\x89\x9a\xaf\xec\x2b\x7b\x92\x42\x0c\x30\x25\x5f\xbc\xd4\xe1\x88\x4e\xbe\xc4\x1e\x34\xa0\x05\x38\xf0\x8c\x0c\x41\xd8\x02\xc0\x55\xd7\x6d\x8d\xe9\x3b\x81\xfb\x63\xf3\x67\x62\xd1\xf1\xec\x93\x8a\x01\x3f\x24\x1b\x28\x1f\xe1\x12\x81\x8e\xdc\x36\xb4\xad\xa0\x64\x03\xf1\xf0\xba\x2b\xcd\xf4\xa8\x2c\x88\x1b\xd9\xf1\x7e\x1c\xda\x87\x24\x7d\xe6\x49\x64\xe8\x69\xec\xe5\x9f\x58\x8a\x3b\x86\x64\x32\xe4\x42\x29\x43\x84\x14\x9c\xa2\xa9\x87\xdc\x93\xc8\x4c\xff\x67\xf7\x12\x97\x8b\x2b\x05\x4b\x4f\xf3\xaa\x4a\x0b\xb8\xfa\xfd\x1d\x16\x34\xd8\xf2\x03\x5e\xe6\xc0\x84\x35\xbf\x81\x5a\x4a\x61\xff\x09\x00\x00\xff\xff\x96\x8d\xc4\x84\x27\x0a\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2599, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x5d\x6f\x9b\x4a\x10\x7d\xe7\x57\xcc\xb5\x72\x25\xb8\x72\xf0\xfb\x95\xfc\xd4\x56\xfd\x78\x48\xa2\xda\x7f\x60\x0d\x03\xac\x0c\xbb\x74\x3f\x62\xb9\x91\xff\x7b\x67\x16\x70\xc0\x22\x2d\xe9\x53\xd6\xbb\x33\x67\xe6\x9c\x39\x13\x5a\x91\x1d\x45\x89\xf0\xf2\x02\xe9\x53\x7f\xbe\x5c\xa2\x68\xb3\x81\x7d\x25\x2d\x14\xb2\x46\x38\x09\x0b\x25\x2a\x34\xc2\x61\x0e\x87\x33\xb8\x0a\xc1\x9e\x44\x59\xa2\x01\xa7\x75\x9d\x72\xfc\xa7\x5c\x3a\xa9\x4a\x7a\x1c\xf2\x1a\x59\x56\x0e\x5a\xa3\x9f\x11\x0a\xef\x02\x54\x85\x0a\xce\xda\x83\xc1\x7b\xe3\xd5\x04\x69\x28\x01\x99\x6e\x1a\xa1\xf2\x28\x8a\x64\xd3\x6a\xe3\x20\x8e\x00\x56\x0a\xdd\xa6\x72\xae\x5d\xf1\x8f\x52\xba\xca\x1f\x52\x8a\xdc\x94\xfa\xbe\x47\x18\x1f\x39\xf2\x28\x1d\x07\xf3\xd1\x19\xa1\x6c\xc0\x5a\x9c\xba\xc9\x6a\x89\xca\x2d\x2b\xc7\x7f\x17\x46\xb6\x98\x2d\x8b\x44\x63\xb4\xb1\xef\xa2\xbb\x79\x16\xb5\xcc\x49\xc3\x65\x59\x03\x43\x0a\x26\x03\x90\x44\x34\xfd\xf4\x23\x16\xc2\xd7\xee\x6b\x90\xde\x92\x1b\xe8\xa9\x35\x52\xb9\x02\x56\xff\xfe\x58\x41\x4a\xfe\x08\xf1\xa8\x72\x18\xce\x5d\xee\xdd\x11\xcf\x6b\xb8\xa3\x26\x3c\xc2\xff\x5b\x48\x27\x20\xfc\x4a\x27\xb8\xc1\xeb\xc3\x6f\x50\x93\xde\x83\x08\x7d\x3f\xfc\x56\x79\xf2\x85\xfc\x49\x4d\x3e\x88\x86\x53\xe0\xcb\x7e\xff\x04\x1d\x8d\x34\x7a\x16\xe6\x1a\xbd\x85\x07\x3c\xf1\xeb\x87\xf0\x18\x2b\x59\x77\x90\x93\x6b\xc8\x0c\x92\x5a\x16\x04\x28\x3c\x2d\x28\x51\x78\x95\xdd\x20\x17\xda\x34\x82\x38\x5a\x67\x8a\xc6\xa5\xdf\xb1\x94\x74\x3c\x27\xf0\x1f\x13\x15\x36\xa3\x91\x8c\xf1\x5e\x88\x67\x3f\x80\x1d\x79\x61\x0d\x34\x67\x16\x8b\x8d\x91\x12\x74\xbc\xeb\x1e\xbf\xed\x1e\x1f\xd6\xb0\x5a\x25\x14\x2f\x8b\x10\xf5\xcf\x16\x88\x47\x40\x00\x20\x2e\xe3\xed\xe1\x74\xa0\xcd\x0b\x0e\x80\x03\x66\xc2\x5b\x04\xe9\xc2\xf6\xd2\x31\xa7\x4d\x1d\x6d\x71\xd8\xd2\x4c\xe7\x98\x06\xb0\x96\x48\x67\x31\xd5\xe0\x6a\x97\xae\xe2\x40\x6c\x3b\xae\x7a\xbd\x1c\xf8\xf6\x82\xf7\x69\x06\x9d\x37\x8a\x15\x8a\x27\x6b\x17\x88\x8d\x58\x27\xeb\x01\x29\x89\x2e\xc3\x5c\x96\x4c\xa3\x1b\xc4\x75\x0e\xf1\xeb\x62\xf7\x23\xda\x0f\x17\xd7\x0a\xef\x9a\x0c\xa1\xf0\x30\xa8\x7e\x3c\x1b\x94\x74\x31\xaf\x65\x48\x89\x6b\x0f\x93\x3d\x7a\x6c\x59\x6a\xa9\xd5\x67\xa3\x7d\x6b\x3b\x83\x73\xea\x7c\xf1\x6d\xf8\x1f\xdc\xff\x4a\x27\xd4\x46\x5a\x4d\x17\xaf\x57\x9b\x40\x7b\x11\xe7\xa1\x25\x2b\xda\xc9\xc3\x48\xb3\xc2\x46\xee\xdc\xe2\x1b\xf9\x24\x9a\xcf\x5c\x90\xe7\x0f\xf4\xe6\xf3\x59\x6e\xab\xc4\x71\x7c\x99\x76\xdb\x73\x43\x68\xff\xe6\x34\x99\x20\x33\xdc\xa1\x1b\x05\x55\xdc\x8b\x0d\x7b\xf0\x6a\x04\xdd\x7d\x56\x7a\xc2\xf4\x21\x01\x51\xd7\xb4\x09\x64\x04\x7f\x30\x68\xb5\x37\x19\xda\xce\x42\x71\xc6\xdd\xdd\xf4\x4c\x53\x9e\xd4\xf9\x8d\xc9\x92\xce\x34\x7f\x6d\x87\x79\x33\xa4\xf3\xd5\xa7\xe3\x27\x41\x7e\x05\x00\x00\xff\xff\x58\xb4\xed\xa4\xbe\x07\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1982, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x5f\x8f\xdb\x44\x10\x7f\xf7\xa7\x18\xa2\x22\xd9\xd1\xd5\xe1\x19\x74\x48\xed\x71\x85\xf2\x50\x8e\xf6\x74\x48\x54\x15\xda\x73\x26\xf6\x72\x6b\xaf\x6f\x77\x9d\x36\x44\xf9\xee\xcc\xec\xda\x39\x3b\xff\x70\x44\x25\x24\xfa\x94\xf5\xec\xfc\xfd\xfd\xc6\x9e\x49\x2d\xb2\x07\x91\x23\xac\xd7\x90\xde\xb4\xe7\xcd\x26\x8a\x66\x33\xb8\x2d\xa4\x85\x85\x54\x08\x1f\x85\x85\x1c\x2b\x34\xc2\xe1\x1c\xee\x57\xe0\x0a\x04\xfb\x51\xe4\x39\x1a\x70\x5a\xab\x94\xf5\xaf\xe7\xd2\xc9\x2a\xa7\xcb\xce\xae\x94\x79\xe1\xa0\x36\x7a\x89\xb0\x68\x9c\x77\x55\x60\x05\x2b\xdd\x80\xc1\xe7\xa6\xa9\x06\x9e\xba\x10\x90\xe9\xb2\x14\xd5\x3c\x8a\x64\x59\x6b\xe3\x20\x8e\x00\x26\x15\xba\x59\xe1\x5c\x3d\xe1\x87\x5c\xba\xa2\xb9\x4f\x49\x71\x96\xeb\xe7\xad\x83\xfe\x91\x35\x1f\xa4\x1b\xa7\xcc\xbf\xe3\x34\xd1\x18\x6d\xec\x59\x29\xcc\x96\x42\xc9\x39\x95\x35\xce\x2a\x53\x12\x2b\xca\x9b\x94\x89\x13\x23\x2a\x22\x24\xfd\x01\x17\xa2\x51\xee\xb5\x87\xc3\x12\x41\x74\x55\x1b\x59\xb9\x05\x4c\xbe\x7e\x9c\x40\x4a\x94\x79\x7d\xac\xe6\xd0\x9d\x83\xed\xb3\x07\x5c\x5d\xc0\x33\x4a\xa2\x41\xf8\xf6\x12\xd2\x81\x13\xbe\xa5\x13\xec\xf8\x6b\xd5\x77\xbc\x26\xd4\x16\xd3\x88\x55\x85\xcd\xa8\xa8\xbf\x28\xb3\x37\xa2\x64\xbd\x1b\x61\x44\x69\x89\xb8\xca\x09\x59\x59\x10\x4a\x79\x6a\x6b\x96\xa3\x43\x63\xa9\x4f\xc0\xb2\x23\xfa\xe5\x9b\x17\x37\xaf\xd9\x6f\xad\x29\x6a\xb4\xd0\xc6\x0b\xc9\x77\xd1\x10\xf5\x7d\xd7\xa0\x6b\xee\x0a\xa9\xa9\x59\x56\xb5\xa4\xc0\xca\x37\xa0\x45\x10\x86\x1a\xca\x48\xe7\xa8\xa7\xc8\xad\x00\x86\x3c\x7d\x8b\x8f\x0d\x5a\x17\x4d\x67\x11\x19\x78\xa7\x47\x13\xb6\xce\x34\x99\x83\xf5\x00\xed\xf6\x8e\x01\x92\x0b\x06\xdf\x66\x46\xd6\x3e\x83\xcd\x86\x10\xf0\xba\x3b\x62\x12\x4e\x67\x3b\x04\xec\x47\x65\x29\xb9\xa4\xde\x86\xb8\xd2\x8e\xc8\xb0\x2f\x8c\x11\xab\x04\x62\x42\x80\x9e\xde\x34\x4a\x89\x7b\x85\x09\x29\x4f\xb7\xee\x38\xdc\x8f\xfa\x96\x8b\xd9\xa1\x24\xbc\xa9\xbf\x11\x06\x78\xab\xdb\xc2\x3d\x24\x68\x5b\x8c\xea\x50\x8c\x87\xa7\x7b\xd1\x4c\x8b\xd0\xa2\xa9\x32\x88\xd9\xfb\x5b\xcc\x50\x2e\xd1\x74\x79\x4e\x4f\x80\x96\xec\xc4\x8b\x0d\x84\xa6\xed\x90\xbf\xa0\x00\x39\x43\xbb\x28\x59\x96\x4b\x3a\x52\x89\xfe\xdd\x21\xa8\xa9\x80\xa5\xe0\x24\x2c\xbc\xff\xe0\x85\xbe\xa4\x01\xf8\xfc\x09\x62\x21\x81\xc5\x38\xb5\xe8\x78\xac\xf8\xf0\x52\xcf\x57\x5e\x31\xd9\x02\xc2\x4c\x3d\xe1\x47\x62\x12\x70\x65\x77\xdc\xc9\xd7\x9f\x6a\x0a\x67\x03\x55\xf0\xd5\x25\x54\x52\xc1\xba\xc5\x71\xe8\xe1\xd7\x06\x4d\xf0\x1d\x5c\x13\xbc\x8f\x2c\x0a\x40\x7a\x97\x2d\x1a\x74\x49\x26\x54\x00\xbf\x56\x26\x7d\x87\xee\xc9\x36\xde\x7d\x41\x5b\x9b\x8b\x2e\xd0\x2b\x6d\x4a\x41\x8d\x6b\x5a\x7a\xfb\xcf\xf1\xa1\x72\x88\x11\x9f\xeb\xe1\x9a\x12\x2e\x45\x59\x0c\xde\xce\x34\x6e\x2f\x93\xef\x7c\x31\x1d\x3a\x54\x1e\x10\x49\xae\x31\x15\xcb\xe9\xb1\x6b\x3d\x8e\x13\x42\xdc\x08\x57\x0c\xb1\xaa\x49\x32\x06\xaa\xad\xe5\x17\x82\xd4\x4f\x28\xe6\x68\x86\x58\x15\x5e\x36\x06\xad\x9e\xf5\x17\x82\x17\x67\xdd\x43\x6b\x1b\xfa\x15\x2d\x11\x43\x14\x69\x76\x94\x61\xdd\x18\x01\xe4\xd6\xfc\x1f\x61\x3c\x07\xa2\x73\xca\x1b\xa4\x3d\x26\xe3\x0e\x88\xff\x35\xf1\xbd\xa9\xd9\x3f\xef\x45\xed\x1c\xfb\xeb\x5e\xbb\x84\xc9\xd0\x4d\x0d\x2f\xbc\x2a\xa4\x9a\x0f\x40\xe0\xa9\xe3\x17\x1b\x7b\x78\x38\xbf\xff\x40\x83\x8a\x36\x58\xf2\xc1\x0b\xc9\x1f\x17\xb0\xf4\x34\xf8\xc1\x74\x7c\x72\xef\x8f\xed\x13\xc0\xb4\x20\x6c\xd3\x08\xf3\xae\xcb\xe0\x12\x44\x5d\x93\x75\x7c\x22\x4d\xcf\xf7\x81\xea\xe2\x65\x92\xec\xf5\xda\xa9\x72\xa9\xb4\xcf\x54\xd4\x31\xe2\x8e\xce\x52\xe1\xe9\xfa\x4c\x13\x95\xb7\x9a\xf4\x67\xda\x23\x5f\xae\x02\x1e\xa7\xd1\x9b\xac\xd7\xe9\x95\x56\x0a\x33\x5e\xdd\x82\xc5\x66\x33\x49\xd2\x34\x3d\xf7\x3b\xc5\xc0\xed\x7f\xab\xba\x97\x7b\x74\x91\x23\x5e\xf1\xff\xa0\xc6\xc0\xe6\xfe\x43\xa0\x76\xbb\x81\xf5\x19\x7f\x97\x15\x58\x0a\xba\xbd\xd2\x65\xad\xf0\xd3\x2f\xf7\x7f\x52\x06\x27\x77\xb1\xcb\x7e\x1e\xc7\x74\xfc\xc5\xef\x68\xf4\xdd\xd3\xdf\x92\xcd\x20\xad\x1d\x44\xb7\xd9\xc5\xff\xea\x8b\xdd\xfb\xd4\xb4\x27\x8a\xa3\xb0\x8a\xc9\x53\x02\xdf\xc3\x37\x7b\xa6\xf4\xe7\x30\xe5\xe2\xb5\xa5\x0d\xf9\x2e\xfc\xf1\xa3\x90\xd7\x7c\xc3\x56\x4c\x40\xeb\xbe\x35\xa2\x04\x68\x8b\xff\x3b\x00\x00\xff\xff\xdf\x1c\x6a\xde\x87\x0f\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3975, mode: os.FileMode(420), modTime: time.Unix(1448230462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xcd\x72\xdb\x36\x10\xbe\xf3\x29\xb6\x1c\x37\x43\x7a\x14\xea\xee\x4e\x0e\xad\xe3\x49\x75\x49\x3d\x4e\x5e\x00\x26\x97\x24\x6a\x12\x60\x01\xd0\x8a\xea\xd1\xbb\x77\xf1\x43\x91\xb4\x28\x4b\x49\x2f\xd1\x45\x14\xf6\xef\xc3\x87\xc5\xb7\xd4\xcb\x0b\x14\x58\x72\x81\x10\xe7\x0d\x47\x61\x14\xea\x4e\x0a\x8d\x31\xec\xf7\xeb\xeb\x88\xec\xbc\x84\xec\x23\xea\x5c\xf1\xce\x70\x29\x68\x9d\x16\x8f\x56\xb0\xd1\xe8\x2c\x1d\xd3\x39\x6b\xf8\xbf\x08\xd9\x67\xd6\x22\x19\x81\x56\xeb\xbe\x65\x62\xba\x48\x11\xa2\xd8\xef\xa3\xeb\x75\x64\x76\x1d\xc2\x72\xa4\x36\xaa\xcf\x0d\xbc\x44\x60\x1d\x14\x13\x15\x19\xff\x44\x56\xa0\xd2\x2e\xc9\x31\xb8\xf5\x1a\x96\xf0\x01\x95\xa3\x07\x9f\x68\x19\x63\xf6\x49\x7e\xb5\x50\x06\xaf\x69\x84\xad\xf3\x25\xaf\xb1\x65\x7e\xe9\x9e\xed\x1a\xc9\x8a\xb9\x29\xdb\xe8\x5b\xd9\x76\x0d\x7e\xfb\xeb\xf1\x6f\x24\xdc\xfb\xfd\xf5\x21\x8f\x2d\x10\xdc\x96\xeb\xec\xa3\xa8\xec\x45\x0e\x89\xf5\x7c\xc0\x1c\xf9\x33\xaa\x01\xde\xf5\x22\xea\x14\x14\x71\xf1\x10\x8e\x2c\x19\xce\x0e\xfc\x51\x66\x83\x61\x05\x39\x7d\xf5\x2d\x2a\xa8\x8d\xe9\x9e\xb8\xc9\x6e\xc3\xc2\x0a\x4a\xa9\x5a\x66\xb4\xa5\xba\x6c\x6d\x4c\xc5\xe9\x71\x97\x02\x2a\x25\xd5\x49\xea\x69\x99\x98\x3e\x54\xac\x9d\x81\x3c\x1d\xb4\xb0\x33\xcb\x0c\x15\xa2\x6d\x18\x54\x8e\x81\x9c\x8c\xb3\x1d\xac\x6c\x19\xb8\xf9\x60\x23\x27\xae\x87\xad\x64\x9f\xd0\xf8\xa2\x49\x6c\x79\x09\x61\x71\x9a\x52\x05\xca\x6f\xa3\x7f\xf9\x00\x82\x37\x0e\x29\x10\x22\xd3\x2b\xe1\xc1\xeb\x6c\x23\x9e\x89\xb1\xc2\xd2\xed\x68\xbd\x67\xa6\x76\x55\x63\x0f\x38\xa6\xa7\xd9\xc9\xd3\xc2\x45\xa5\xc3\xd1\xbd\x3e\xa7\x6c\xb9\xb9\xec\xf6\x8e\xf7\xee\x52\x1c\xee\xcd\xc5\xa9\xce\xe2\xf3\x79\xdd\xed\x3a\xdb\xc7\xe7\xfa\xf7\xc4\x36\x87\xf6\x27\xe6\x71\x9b\x2c\xb5\x76\xfa\xaa\xf6\xb4\x59\x3a\x1f\x3d\x9e\x20\x9d\xff\xd0\xa1\x43\x67\x8e\x1d\xf0\x87\x2c\x76\x49\xba\x0a\x50\x85\x34\x6f\xc0\x7d\xe7\x4b\x2e\x13\x1a\x40\xa7\xbf\xbd\xd5\x35\xe3\xd9\x1e\xa0\x07\x23\x79\xd3\x1d\x3d\x18\x3a\x96\x3f\xb1\xca\x09\x17\x65\xf6\xcf\xe4\x1e\xd1\x46\xbf\xd6\x5c\x43\xc9\x1b\x84\x2d\xd3\x50\xa1\x40\xc5\x0c\x16\xf0\xb8\x03\x53\x23\xe8\x2d\xab\x2a\xba\x2c\x46\xca\x26\xb3\xfe\x77\x05\x37\x5c\x54\x64\x1c\xe2\x5a\x5e\xd5\x06\x3a\x25\x9f\x11\xca\xde\xb8\x54\x35\x0a\xd8\xc9\x9e\xe0\xbc\x57\xbd\x98\x65\x1a\x4a\x10\x8b\x2d\xe9\x6c\x11\x45\x11\x6f\x3b\xa9\x0c\x24\x84\x3f\x16\x68\xd6\xf6\xe2\xc7\xf6\x47\xc5\x4d\xdd\x3f\x66\xe4\xb9\xae\xe4\xfb\x90\x61\xfa\x18\x24\xe2\x32\x67\xfb\x7d\x99\xa7\xbf\x91\xdf\x05\x61\xed\x2e\x2f\xed\xeb\xb2\x28\xaf\x7a\x71\x34\x53\xac\x8f\x58\xb2\xbe\x31\x1b\x47\x87\x9f\x19\xc4\x2b\x17\xa6\x84\xf8\xd7\x7f\x62\xc8\x96\x6e\x89\x8f\xbd\x7a\xc2\xdd\x0a\xae\x08\x44\x8f\xb6\x45\xb3\x59\x12\x6b\x0d\x83\x63\x9a\x2f\xb8\xbf\xca\x9a\x46\x6f\x4c\xb9\x07\xaf\x9d\x93\x59\x77\x42\x93\x7f\x64\x44\xf8\xe4\x29\x3c\xfc\xcf\x41\x91\x42\x42\x9b\x44\x55\xb2\x1c\x5f\xbc\x6c\x4b\x5a\xb4\x68\xf5\x96\x9b\xbc\x1e\x75\xe9\x56\x16\x98\xa4\xf3\xc9\x71\xc4\xe5\x50\x32\xcc\x12\x20\x79\xd4\x8e\x9f\xc0\xeb\x8d\x5b\x04\x78\x66\xca\x66\xa6\x23\x9c\x93\xe7\x53\x4d\xa4\xd4\x7e\x46\x39\xf1\x21\xd9\xe2\x78\x1c\x77\xe9\x44\xe5\xea\x48\x28\x02\xfd\x4b\x42\x31\x11\x0b\x5a\x5c\x05\xc5\xb0\x9f\x01\x43\xb0\x7a\xb5\x0a\x28\x37\xfa\x4b\x9f\xe7\xa8\xed\x66\xdf\x79\x68\x2b\x1b\x3f\xc8\xbf\x4b\xf5\x19\xb7\xbf\xdf\x6f\xee\x2c\xaf\x4e\xd0\xe7\x3b\xa4\xc1\x74\x88\x7c\xc5\x74\x3a\x55\xfb\x41\xfd\xfc\x8b\x91\xeb\xfd\x81\x00\xdf\xb7\x74\x58\xf5\x92\xc9\xc1\x2f\xfc\xf2\x39\xf2\x7f\x76\xda\x7f\x8c\xf0\xef\xa0\x7a\xf2\x56\xe7\x13\x2e\xb1\x37\x05\x3c\xab\xd5\x8b\x27\x21\xb7\xe1\x25\x65\xf2\xc6\xb1\x54\x6e\xd4\x25\xf7\x86\x78\xe1\x85\x22\x37\x83\x34\x1a\xed\x4c\x38\x7a\xb1\x1f\x25\x6a\x4c\x7f\xb2\x63\xde\x4e\x75\x22\x20\x24\x1d\xd1\x66\x77\xdf\x8c\x62\x7e\x6c\x3b\x80\xfe\xaf\xc5\x98\xb8\x90\x39\x29\x1c\x0d\x41\xca\x69\xed\x41\xd3\x6f\x5a\xe2\xa1\x81\xc9\xe1\xd8\x3f\x0c\xb3\x48\xed\x92\x86\xb0\xb1\xf6\x7f\x01\x00\x00\xff\xff\x87\x41\xe1\x75\xd9\x0c\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 3289, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x49\x2d\x52\x52\xd0\x53\xa8\xad\xe5\xe2\xd2\xd7\xe2\x42\x91\x4d\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x87\x2a\x28\x2e\x4f\x4c\x4f\x4f\x2d\xb2\xca\xcd\x4f\x49\xcd\x51\x00\x2a\xd5\xf3\x4b\xcc\x4d\x05\xc9\x68\xe9\xa3\xea\x2c\x4e\xce\x48\xcd\x4d\x84\x99\x0b\x94\x2a\x4a\xcc\x4b\x4f\x55\xd0\x73\xad\x28\x29\x4a\x0c\x06\x4b\x16\x83\xa4\x68\x64\x23\x50\x26\x35\x2f\x05\xc4\x02\x04\x00\x00\xff\xff\xab\x63\xcf\xcc\xee\x00\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 238, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\xcb\x52\xeb\x30\x0c\x86\xf7\x79\x0a\x4d\x57\xed\x59\xa4\xe7\x15\x0a\x1b\xd8\x50\x06\x3a\xec\x4d\xa2\xb4\x66\x7c\x09\xb2\xd2\xa1\x64\xf2\xee\xc8\x38\x0d\xa1\x4d\x87\x81\x9d\xac\xcb\xaf\x4f\x92\xdb\x16\x74\x05\x9e\x20\xbf\x0d\xd7\xde\xd6\x06\xdf\xd6\xcf\x2f\x58\x70\x74\x6c\x1a\x79\x47\x63\x55\x96\x9a\xb5\x77\xca\xdc\x93\xaf\x91\x58\x63\x80\xae\x4b\xc5\xf9\x9d\xb2\x28\x2f\x3e\xd4\x08\xe2\xaa\x55\x28\x94\xd1\xef\x38\x44\xa2\x17\x5d\x99\x2a\x18\xa5\x8b\x62\x84\x59\x28\x76\x68\xd5\x95\x2f\x0f\x33\xc8\x25\x98\xc5\x34\x13\x7e\xd6\x3a\x95\xd8\x48\xf6\x48\xe2\xd8\x29\xb2\x1d\x87\x48\xa1\xaf\x42\x8e\xde\x47\x24\xfd\xa9\x4e\x27\x00\xa9\xf2\xc2\xd4\xdf\x85\xd4\x44\xd2\xa4\x6e\x4f\xd5\x6f\xfb\x01\x5f\x1b\x4d\x58\x42\x7e\xa3\xc2\x93\x24\x97\x2a\xaa\x9c\xeb\xa7\x09\xf7\x29\xc3\x4f\x80\x6e\x19\xe6\x06\x1d\xe4\x2b\x63\xd6\xd5\x02\xfe\xff\x52\xe2\xb8\xaa\x3f\xfe\x81\xe5\x12\x7a\x7c\x84\xbe\x85\xf8\x79\xa7\x43\xbc\xd4\xae\xb1\xca\x8d\xcf\x97\x55\x8d\x2b\x60\xde\xb6\xb2\x81\x02\xf5\x1e\x29\x06\xd2\x59\x07\x88\xa1\xe7\x19\xcd\x05\x88\x7f\xe3\xb3\x9f\xfc\x99\xae\x5b\x0c\x84\xf3\xca\x93\x55\x1c\x20\x30\x55\x96\x85\x61\xab\xc5\x3c\x2c\x00\x89\xa4\x77\x9b\x01\x10\x72\x43\x0e\x9c\x36\x59\x37\x96\x4d\x46\xf6\x11\x00\x00\xff\xff\xa2\x91\xe4\x84\x31\x03\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1447613026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x92\x3f\x4f\xf3\x30\x10\xc6\xf7\xf7\x53\x9c\xa2\x77\xaa\x44\xba\xb3\x05\x21\x41\x17\x40\xa2\x62\xa9\x90\x6a\xc5\x97\x62\xe4\xd8\x56\xec\x0c\x21\xca\x77\xe7\x92\x6b\x9a\xa4\x34\x50\x31\xb0\xc0\xe6\x3f\xbf\xbb\x7b\xee\xee\xa9\x6b\x90\x98\x29\x83\x10\xf9\xf4\x05\x73\x71\x65\x65\x15\x41\xd3\xf8\x50\x94\x69\x80\xfa\x1f\x00\x31\x85\x30\x3b\x84\x38\xd1\xfa\x3e\xa3\x4f\x7e\x54\x19\xc4\x2b\x9f\x18\x6b\xaa\xdc\x96\x9e\xde\x07\xf2\xa1\xb0\x0e\x8b\xa0\xd0\x8f\xf1\xff\xc4\xaf\x4b\xa7\x91\xd9\x80\xb9\xd3\x22\x50\xed\xd0\x3e\x66\x0a\xb5\x8c\x20\xe6\x4f\xd4\x9e\xb1\x81\x62\x4d\x47\x98\x91\x87\x0a\x7c\xde\x2b\xbb\x15\x3e\x91\x52\x05\x65\x8d\xd0\x13\x39\xcb\x05\x4c\x8a\x4b\x9b\x52\x66\x65\x76\x94\x74\x26\x64\xc2\x3b\xfe\xa9\x9e\x84\x56\x52\xb4\xf4\xb5\x4d\x1f\x3f\xcb\xd0\x34\xb0\x58\xb2\x46\x27\x7c\x4a\x71\x6f\x78\x9a\x8c\xef\x44\xde\xb6\x0d\xb9\x70\x1b\x56\xf5\x3c\x29\xce\x5b\x5a\x57\x0e\xe7\xd5\xc2\xf6\xd5\x5b\x73\x19\x5d\x44\xdb\xb6\x26\x8d\x65\xbc\xb2\x21\x68\x45\x69\xcf\x1f\x48\x4f\x7f\x6b\x16\x5d\xf0\x57\x63\xe8\xa0\xc3\x04\x36\x67\x35\xde\xab\x1a\xf5\x3c\x36\xc3\xfe\xcc\x5e\xe2\x4b\x7c\x63\xdb\x2c\x73\xf6\xe9\xce\x1f\x5c\xfc\x63\x26\x3e\x5a\xd6\x9f\x8b\x4f\x6f\xf4\xf7\x19\xb9\xe9\xbd\xf1\x1e\x00\x00\xff\xff\x7e\x1e\x08\x68\xb3\x05\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 1459, mode: os.FileMode(420), modTime: time.Unix(1448233966, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1446347553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x5b\x6f\xdb\x36\x14\x7e\xcf\xaf\xe0\x8c\x6e\xb0\x5b\x43\xed\xc3\xb0\x87\x75\x1d\x10\x14\xd9\x16\xac\x4d\x82\xb6\xcb\x4b\x51\x2c\x8c\x4d\xc7\x2a\x74\x71\x44\x29\xb3\x67\xf8\xbf\xef\x90\x14\x29\x8a\xa2\x24\x2a\x56\xbc\xc4\x75\x5e\x22\xf1\x72\x78\x3e\xf2\x3b\x37\xda\x5e\xaf\xa7\x64\xe6\x47\x04\x0d\x16\x89\x1f\xfa\xa9\x7f\x07\xaf\x24\x98\xde\xe1\xc0\x9f\xe2\x34\x4e\x06\x9b\xcd\xd1\x7a\xed\xcf\x90\xf7\x81\xdc\x66\x7e\x42\xa6\xd0\x00\xaf\x24\x49\xd0\xcf\x6f\x50\x3e\x8e\xa8\xde\xe1\x7a\x8d\xbc\x0b\x9c\xce\xd1\x66\x33\x46\xf0\x02\x72\xa3\x74\x86\x06\xdf\xdf\x0e\x90\xf7\x2e\x9e\xe0\xd4\x8f\x23\xd9\x09\x82\xa2\x38\x45\xde\x29\x3d\x8e\xe2\x68\x15\xc6\x19\x85\x2e\x26\xe2\xf7\xf8\xd3\x6a\x41\xe0\x05\x04\x92\x68\xca\x1a\xbd\x4b\x1c\x64\xe4\x64\xb9\x48\x08\xa5\x20\x84\x0f\xb4\x4b\x18\xe5\x93\x46\xaf\xb9\xa2\xdf\xbd\x41\x91\x1f\xa0\xf5\x11\x42\x09\x49\xb3\x24\x62\xad\x47\x0c\x18\x1f\x95\x03\x7c\xef\x47\xef\x48\x74\x93\xce\xed\x08\x55\xf7\x50\x2c\x2b\x51\x6a\x80\x41\x5e\x40\xc9\x66\x33\x18\xe4\x92\x5b\x76\x80\xa6\xd0\x75\x33\xb4\x41\x1b\xb1\xa9\xba\x4a\xdd\xa0\xe0\x65\x23\x14\xd9\xbd\x4b\x28\x85\x4a\x9d\xa0\x80\x3e\x29\x49\x22\x3b\x90\xbc\x73\x57\x30\xae\xa0\x5d\xe9\x73\xd5\x95\x5c\x7e\x98\x85\xb5\xd4\x62\x9d\xfd\xc1\x98\x05\x31\x4e\x7f\xfa\xb1\x99\x59\x42\x1f\xfe\x76\xb2\x9c\x04\x19\x05\xe3\x57\xcd\x5d\xe9\xd6\x00\x4e\x74\xee\x14\x9c\xd4\xc7\x00\x27\x9b\xbb\x81\xcb\x82\xd4\x5f\x04\xe4\x7c\x56\x83\x4f\xf5\xef\x14\xa2\xa6\x55\x27\x38\x27\x91\x71\x50\x20\xec\x03\x99\x10\xd8\x9f\xe4\x0c\x87\xa0\xa4\x27\xa1\x31\x15\x31\x9d\xc0\xdb\xbf\x04\x79\xac\x53\xa0\xd2\x1a\x3f\x66\xb3\x99\xbf\x84\x66\x26\xb6\x3f\xfc\x56\xdc\xae\x28\xe5\x7f\x19\xd9\x68\xe0\x4f\x48\x35\xa0\xc5\x09\xb7\xca\xd3\x94\x84\x94\x53\x58\x3c\xf1\x6e\x88\x27\xd1\x94\x2c\x2f\x71\x52\x41\x9c\x6f\xc3\x47\xf6\x02\xbb\x07\x08\xe0\x9c\x02\x12\xd9\xcf\x6a\x54\x75\x03\x7c\x99\x5a\x3f\xc0\x7b\xfb\xdc\x48\x37\x28\xd2\x27\xe4\xca\x75\xb5\xfe\x26\x4c\x79\xef\xff\x85\x49\x29\xd7\x09\xd3\x5f\x91\x7f\x9b\x91\x06\x58\xda\x80\x47\x42\xfb\x3e\x8c\xfb\xb1\x58\x71\xae\x82\xb4\x48\xf1\xca\x0c\x96\xb7\xa8\x64\x53\xbe\xff\x81\xe9\xa5\x80\x05\x6b\x70\x13\x9e\xc1\x60\x58\x5e\xd2\x64\xb3\x61\x9b\xf1\xea\xb5\xd1\xf6\x0b\xaa\x35\x5c\x63\xe8\x8b\x17\xa0\xeb\x7a\xfd\x8f\x0f\x1b\xe1\x49\x5a\x20\x18\x03\x8f\x8b\x00\xb6\x93\x25\xd0\xf1\x82\x24\xe9\xaa\xf0\x34\xc8\xd3\xfc\xd1\x46\x41\x33\xfd\x14\x92\x8e\x2a\xc4\x0b\x6d\xb2\xe8\x93\xa7\x8a\x8c\x63\x45\xa5\x73\x45\xbb\x3e\x58\x64\x6e\x19\x72\x38\x5a\x04\xb2\xd5\x69\xb2\x43\x3b\x9e\x4e\x7d\x26\x14\x07\x17\x62\xf3\x7c\x42\x0b\xdc\xc8\xb3\xf5\x7b\x67\x84\x4c\xb5\xe3\xd6\x4e\xdb\x3a\xfc\x4f\xb2\x52\x04\x48\x70\x74\x43\x6a\xb4\xe7\x0a\x43\x97\x38\xe2\x3a\xcd\xf8\x90\xe6\x33\x57\xc3\x04\x5a\x0b\x72\xab\x9e\x8a\xd3\x7b\x55\x5f\x15\xc0\xe5\x83\x19\x9d\xe3\xeb\xaf\x64\x92\xea\xe1\xb9\x76\x55\x69\x0f\xa7\xf4\x2c\x0b\x02\x7c\x1d\x30\xfd\xa1\xa1\xe6\x40\x95\x56\xc5\x59\x94\x1c\x63\x05\xae\x97\xb3\x8a\x0c\x81\x50\x21\x4e\x69\x3b\xbc\x8a\x3a\x05\x54\xbe\x2c\x98\x55\xfe\x28\xb8\xe7\x1d\x07\xc1\xf9\xac\xdc\x54\xe1\x7e\x3b\xbf\xca\x8b\xa8\xa7\x1e\x04\x2a\x36\x00\x32\x1c\x31\x0f\x4b\x3f\x65\x90\x67\xea\xac\x55\x89\xd2\xcb\x97\x92\xa0\x50\x34\x21\xac\x06\x20\x9f\x8f\xa0\xf3\x38\x0b\xa6\xe8\x26\x46\x73\x92\x90\xa3\x8a\x03\x2c\xae\x1e\x4c\xa5\x54\x40\x3b\xa5\x17\xf2\x5e\x42\xd0\x48\x87\x62\xbf\xb0\x90\x5e\x97\x6d\xbd\x10\xf1\x36\xa3\x69\x1c\xfe\xc6\xcf\x14\x6a\x37\x53\xd0\x84\x77\x8b\x23\x6f\x12\x73\x9c\x24\x78\x65\x4e\x36\x92\xcb\xea\xac\xf7\x78\x61\x4c\x29\xbb\xf9\x7c\xfb\xe5\x0c\x1e\xe4\xe8\xdb\x18\x06\x93\xe5\x39\xb7\x0d\xed\x0c\x4e\xeb\x5c\x66\x69\x01\xd3\xa4\xf8\x1a\x0d\xf9\xf1\x64\x4e\x42\x5c\x8a\x3c\x46\xe0\xb9\xc3\xcc\xbf\xa2\x09\xc4\x92\x4a\x54\x41\x9f\xbf\x80\x03\x22\xc9\x0c\x4f\xc8\x1a\x5c\x71\x16\x4d\xd0\xd0\x12\x9f\xd0\xf3\x6a\x60\x02\x07\x82\xda\xc3\xd6\x02\xbc\xdd\x18\x05\xd2\xb5\x89\x12\x7d\xcc\x26\x66\xa4\xec\x8e\x05\x12\xe6\xd8\x04\xe6\x11\x33\x54\x16\x1b\xc0\x72\x85\x9f\xb0\x43\x78\x53\x18\x38\x42\x0c\x2c\xb8\x04\xc0\xd5\x28\x9b\x8f\x2d\xfc\xc9\x57\x1a\x47\x90\x14\x86\x38\xa1\x73\x1c\x0c\x3f\x7f\xb9\x5e\x81\x1f\xb9\x02\x11\xac\x47\x6d\xe5\x15\x54\x6f\x3f\x80\xf4\xaa\x67\x61\x7f\x9a\x77\x61\xaf\x62\x0d\x16\xdc\xfe\x06\xb8\x45\x00\x63\xda\xc9\x29\xf5\x98\x10\x5e\x2c\xe0\xa8\x87\x75\x23\x40\xe4\x48\x2d\xb3\x29\x7c\x9b\x0a\x39\x96\xcd\xcf\x77\x7d\x5c\xbb\xec\xc8\x12\xee\xb8\xbb\xc8\xf1\xd7\x31\xa9\x18\x73\x3f\x3a\x3d\x73\xe3\x93\x5a\xe6\xbe\xa4\x92\xae\xcf\x81\x59\x05\xa4\xce\xf4\x52\x0e\xb6\x1b\xc7\xf4\x8d\xde\x09\xd1\x34\x88\x4d\x6c\x53\xc3\xfa\xa5\x9c\x26\xd8\xa4\x5d\x73\x12\xe7\xe8\xdd\x44\x7e\xf0\xd0\x2e\x4e\xad\xf2\xb0\x7e\xae\x00\xb3\x67\xce\x4e\x03\xd6\xc4\x41\x35\xac\x77\xb7\xa7\x24\x97\x48\xa8\x3d\x41\x96\x24\x13\x4b\xb5\x0a\x45\xe9\xdc\xa7\x4c\xde\x3c\x0b\x71\xa4\xcb\x53\xfc\x32\x2a\x77\xa4\x55\xc1\x45\x3e\x50\xc9\x14\x6a\x48\xff\x5c\x37\x0f\x0b\x47\xcd\xd4\x97\xd1\x6f\x16\xa6\xa0\xc3\x8d\x0f\x8f\x2b\x9d\x62\x05\x69\x78\x9b\xa8\x76\xcc\xfc\x36\x3f\xaf\x5c\xe3\xa2\x62\xaf\xd6\xea\x62\xe4\x36\xd9\x9e\x90\xd0\x4b\xc6\x57\x11\xe5\x9c\xf5\x55\x66\x3a\x65\x7e\xf9\x36\xe5\x54\xc9\x5f\x2b\x79\xbc\xbe\x4b\x4d\xdb\x59\xb1\xd4\x8e\xf7\x3f\xf5\x85\x8f\xb0\x58\x5a\x18\x19\xbc\x8c\xd9\xa0\x91\x66\xbd\x32\xb7\x2c\x83\xd2\xdb\xdb\xeb\x0a\x3e\x6c\x8b\x9b\x0e\x71\x25\xd7\x80\xa3\x16\x85\xa9\x69\x4d\x15\xda\xac\x5b\x59\x27\x55\x65\x3b\x94\x96\xad\x9a\xe9\xfb\xa9\x3f\x6f\x67\x39\xbd\xd9\xcd\x7d\xad\xe6\x3e\x36\x53\xb2\x98\x3a\x7b\x71\xb3\x96\x07\xb1\x15\x67\x8e\x3d\x55\xbb\x50\xc9\xd3\x56\x3a\xf1\x50\x3b\x18\x8c\xd1\xe0\x3a\x9e\xae\x06\x63\x9b\x84\x2d\x0c\x45\x28\xc7\xae\x78\x59\x12\x82\x7e\x45\xaf\xd4\x7c\x99\x7a\xc4\x09\xf5\x58\x08\x8d\xa9\x9f\x92\x82\x1a\x27\xac\x87\xcd\xf2\x3c\x6f\x54\xce\x13\x40\x0b\x1e\xe7\x6d\x9c\x73\x60\x5c\x79\xfb\xcc\xd4\xf3\x99\xfd\x53\xb6\xed\xcb\x6d\xc7\xfa\xe8\xe1\xf2\x50\x07\x64\x7b\x92\x98\xba\x20\xb5\x65\xaa\xed\xf3\x7a\x4b\x5d\x25\x1b\x6c\xa9\xe0\x7d\xaa\xf8\x66\xd5\xf7\xa8\xb6\x77\x05\xba\x77\x15\xbf\x33\xf0\xee\xcc\xee\xff\x76\xa0\x89\xde\xb5\x57\x06\xe5\x0f\x66\xf2\x90\x6b\x6f\xdf\x47\xef\x5d\xbd\xdd\xdf\xb1\x33\xb7\x7c\xbc\xd0\xcd\x16\x6a\x0e\xe9\xe0\xeb\xbb\xf9\xfa\x7e\xee\xd0\x9a\x01\x6e\x7b\xb3\xe6\x68\x0f\x0f\x7c\xb5\xe6\x8a\xf1\x9b\xc8\x6b\x5a\xae\xe1\x1c\x27\xf7\xcc\xfa\xd6\xf5\xea\xae\xec\xe0\xaf\xee\x16\xce\xc6\x44\xd4\x4a\x45\x97\x6b\x35\x87\x2f\x93\x54\xcb\x10\xf3\x43\x3d\xfd\x1a\x6e\x73\xa8\x53\x0e\x75\xca\xb7\x14\xbb\x0e\x75\xca\xa1\x4e\x39\xd4\x29\x87\x3a\xe5\x50\xa7\xec\xbf\xaf\x3f\xd4\x29\x87\x3a\xe5\x50\xa7\x3c\x95\x32\xa5\x50\xdd\x2c\x58\x2a\x5f\x05\xd7\x7f\x86\xd3\x21\xa8\x3d\xb5\x2c\xae\x53\x20\xeb\x21\x73\x7b\x92\x71\xeb\x71\x7f\xd1\xcc\xd1\xf8\x1c\x6d\xaf\xf4\x01\x6d\xb3\x01\xca\x6f\xd5\x98\x47\x52\x94\xf3\x66\x8f\xed\x5b\x37\xe2\x57\x13\xa5\xdf\x52\xb5\xfd\x48\xc2\xab\xd7\x3c\x3f\xbf\x36\xef\x60\xa5\xa1\xf9\x9d\x86\xc6\x3b\x8e\xff\x02\x00\x00\xff\xff\x10\x76\xb0\xf5\xb3\x3e\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 16051, mode: os.FileMode(420), modTime: time.Unix(1447613026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xeb\x6f\xdb\xba\x15\xff\x3c\xff\x15\x07\x46\xef\x20\x05\xbe\x4a\x3e\x0e\x01\x32\x20\x6b\xef\x70\xbb\x47\x57\x24\xc5\xf6\xa1\x28\x06\x46\xa2\x6d\x22\x7a\x95\xa4\x92\x65\x86\xff\xf7\x9d\x43\xf2\xe8\x61\x49\x4e\xe2\xa5\xc3\x82\xa2\x90\xc5\xc3\xf3\x7e\xfc\x48\xd5\x22\xbd\x17\x1b\x09\xbb\x5d\xf2\xd9\x3f\xee\xf7\x8b\xdd\x0e\xde\xf1\xc2\xe5\x15\xf0\x0a\xe0\xd2\xe2\xfc\x1c\xbe\x6c\x95\x81\xb5\xca\x25\x3c\x0a\x03\x1b\x59\x4a\x2d\xac\xcc\xe0\xee\x09\xec\x56\x82\x79\x14\x9b\x8d\xd4\x60\xab\x2a\x4f\x88\xfe\x97\x4c\x59\x55\x6e\x70\x91\xf7\x15\x6a\xb3\xb5\x50\xeb\xea\x41\xc2\xba\xb1\x8e\xd5\x56\x96\xf0\x54\x35\xa0\xe5\xcf\xba\x29\x07\x9c\x58\x04\xa4\x55\x51\x88\x32\x5b\x2c\x54\x51\x57\xda\x42\xb4\x00\x58\x1a\xab\x91\xbb\x59\xd2\x73\x29\xed\xf9\xd6\xda\xda\xfd\xd8\x28\xbb\x6d\xee\x12\xdc\x74\xbe\xa9\x7e\x0e\xcc\xfa\x8f\x44\x79\xaf\xec\xcb\x88\x4d\x2d\xd3\x17\x52\x5a\xbd\x2e\x5e\xc8\x35\xa8\x70\x5e\xa8\x2c\xcb\xe5\xa3\xd0\xf2\x75\xfb\x8c\x4c\x1b\xad\xec\xd3\x72\x81\xdb\x30\x6e\x5a\x94\x18\xa8\xe4\x83\x5c\x8b\x26\xb7\x1f\x9d\x9b\x0c\x06\x0e\x97\x6a\x74\x93\x5d\xc3\xf2\xa7\xef\x4b\x48\x28\x96\x6e\x83\x2c\xb3\xf6\xd9\x6f\x7e\x77\x2f\x9f\x56\xf0\xee\x41\xe4\x8d\x0f\xff\x80\x0b\xad\xe2\x13\x1c\x30\x0c\xe4\x07\x5c\x63\x97\x2f\x9f\xe4\x23\x51\x0b\x93\x8a\x5c\xfd\x1b\xb5\xfb\x24\x0a\x22\xbd\xfe\xfc\x11\x52\x2d\x31\xb0\x06\x04\x94\xf2\x11\x26\xc9\x40\x95\xc6\x8a\x32\x95\x8b\x75\x53\xa6\xc7\xb8\x45\x14\x23\x38\xa3\xff\x93\x0f\x55\xda\x14\xb2\xb4\x31\x9c\xcd\x0a\xdf\x39\x65\x93\x1b\x99\x4a\xf5\x20\x35\xad\xa0\x38\x34\xf9\xb7\x73\x5b\x68\x07\x00\x09\xb8\x04\x7e\x5a\xb9\x77\x5b\xcc\xcb\x5c\x6a\x73\x09\x85\xb8\x97\x51\x21\xea\xaf\x3e\x31\xbf\x51\xa8\x92\x5f\xfd\x72\xec\x89\xd7\x95\x2e\x84\x45\x5a\xf0\xb9\xc2\xf1\xf2\xab\x99\xff\xf1\xbe\x2a\x0d\x9a\x80\x54\x4b\x54\x87\x49\xf8\x2d\xea\xb3\x1c\x90\x7f\xd6\x55\xd6\xa4\x87\xe4\xfc\x96\xc9\xf7\x94\x27\x5a\xda\x46\x97\x63\xd3\x17\x54\xdf\x47\xdc\xb5\x03\xb5\xc6\x74\x28\xd7\x95\xcf\x05\xfe\x85\xc2\x4c\xaa\x55\x6d\x55\x55\xba\x95\xd1\x5b\x47\x2e\x73\x43\xac\xa8\xb2\xf1\xd7\xb6\xc1\x52\x1e\xc4\x99\xfc\xcb\xa9\xd3\x3e\xc0\xd9\xf9\xc2\x3e\xd5\x72\x3a\x37\x48\x2d\x74\x61\x93\x5a\x17\x4c\x17\xff\xde\xdf\x30\x15\x90\x20\xad\x4a\x2b\xff\x65\x3b\x82\xae\xee\x92\xf7\x7e\x6d\xd1\xc5\x92\xa9\x66\x82\xb9\x68\x03\xd9\xf2\x0b\xe1\xbc\x91\x1b\x85\x8f\x4f\x8b\x51\x30\xc1\xf3\x59\x8c\xc2\xd6\x2d\xec\x76\xa1\x88\x79\xcf\x7e\x8f\x45\x34\x69\x7e\xa0\xd0\x18\x51\x12\x48\x2a\x0b\xb2\xd1\xbf\x44\xe5\xf0\xa7\xcb\x86\xbf\xca\x4c\x89\x2f\xe4\x46\xcc\x03\x6c\xbf\xb8\x9b\x9c\xea\x8b\xf5\x08\xdf\xd0\x66\x58\x15\xed\x36\x60\x60\x42\x9d\x07\x45\xd9\x86\x79\x45\x03\xc5\x50\xd1\x9a\x5f\x9e\xae\x68\xcb\x97\x15\xe5\x17\xd3\x8a\xde\x86\x6e\x89\xc5\xa1\x4a\x45\x89\x69\x02\x81\x4b\x65\xf3\x07\x61\x54\x7a\xdd\xd8\xed\xbc\x25\xb4\x3a\xb0\x82\x9a\x92\x4b\x7c\xbb\x15\x16\x2c\x16\xbf\x81\xc6\x48\x5d\x12\x3d\x26\x0a\xf1\x30\x8f\x95\xce\xdc\x0f\x5f\x7a\xde\x7a\x55\xa6\xaa\x16\x39\xca\x47\x61\x0a\xe7\xa1\xd4\x94\x4f\xb8\x88\x32\x30\x5f\x55\x2a\x1c\xe3\x47\x1c\x06\x70\x47\xaa\xb9\x95\x39\x5f\x38\xcd\x48\x9b\xc8\xa7\xd2\x2a\xa4\x54\x0c\x91\xaf\xd5\xb2\xc2\x89\x09\xf2\x3b\x05\x2c\xc8\x86\x25\xb6\x70\x14\x2b\x52\xb9\x43\x7f\xc7\xc8\xe6\xac\x5f\x83\x3d\xca\xfd\x7e\x05\x52\xeb\x4a\xc7\x9d\x6f\xd9\x6f\x58\x86\x7f\x96\x4f\x6f\xe0\x38\x81\xa8\xe1\x1e\x81\xc0\xa9\xae\x42\x2f\x21\x10\xa9\x88\x01\x88\x5a\x01\x0d\x2b\x32\x83\x5b\x0c\x41\x0e\x95\x21\x89\xf2\x08\x03\x5b\xd5\x6d\xd5\xe8\x54\xf2\xe0\x7a\xde\xad\x3f\xd0\x9d\xd3\x49\xfb\xb7\x9a\xc0\x8f\xcf\xd5\x39\xe7\x86\x8e\x04\x46\x62\x33\x22\xc3\x2a\xde\xc4\xcd\xcc\x15\xd9\x6c\xeb\x6d\xc9\xe7\xbc\xc0\x02\x5c\xc4\x4b\xd9\x61\x42\x06\x8a\xae\xed\xb7\x10\x32\x69\x13\x64\x9e\xd7\xc0\x5a\x34\xec\x56\xea\x07\xf9\x0b\xb9\x04\x10\x27\xe2\x9e\x1c\xe3\xe4\x60\x21\x06\x53\xf2\x7b\xed\x27\x56\xb6\x22\x63\xb4\xa4\x57\x82\x7b\x29\xdb\xea\xf9\xdd\x35\xd6\x01\xca\x14\xb7\xa3\x5f\xe8\x59\x43\xf5\x18\xea\x89\xc0\x28\xd2\xf5\x84\xba\xc1\x4c\x71\x76\x3d\xfe\x46\x9a\x1a\x5d\x2e\xff\x81\xfd\x42\xea\x15\x9c\x85\xb7\xdf\x1b\x69\x6c\x1b\x3a\x0f\x88\x6f\xa5\x3d\x1c\xb7\x6d\x20\x58\xb5\x9a\x57\x0a\xea\x70\xbe\xa9\x39\x3c\x13\x8d\x11\xc8\xec\x08\x8e\x27\x44\x45\x45\xdb\x32\x39\x41\x77\x8b\xdf\x8c\x98\x26\x87\xf3\xe6\x0a\xda\x8d\x23\x33\xda\x69\xc5\x35\xd8\xb7\x24\xe5\xc5\xb7\xb2\x84\xa5\xbd\xd2\x92\x56\xc9\xb1\x25\x87\xd1\x98\x32\xe3\x8d\x02\x72\x18\x8d\x38\xe8\x4e\xaa\xcf\xe1\xac\xc3\x58\x0c\xb5\xfe\x5f\x38\xff\xd0\xf3\xaf\xd1\x9a\x37\x05\xad\xff\x18\x20\x50\x5f\x5b\x6e\xf3\x58\xc0\x81\x6f\x00\x4a\xa7\xe8\x1a\x04\x78\x1d\xfb\xe8\xea\xa8\xb2\x2c\xd0\x2b\x79\x13\x14\xf2\xbc\x86\x70\xa9\x31\xb6\x2a\x82\x82\x80\xc7\x18\x95\x09\x5b\xe9\x53\x34\x1d\x4a\x89\x1c\x02\xe0\x59\x1c\xf8\x07\x13\x3c\xc5\xaa\x13\xc7\x0b\x7f\xe7\x17\xf1\xf4\xe9\x84\xed\x4a\xae\xb3\xcc\x09\x60\xce\x3d\x5e\xdc\x96\x02\x2f\xc9\x2b\xb2\x1f\x9c\x30\x52\xba\x41\x38\x6d\xd4\x29\x6e\x60\xb9\x18\x31\xdf\xb6\xc9\x92\x07\xa1\xa1\x29\x7b\x89\xf1\xf5\xdb\x31\xc4\x8b\x6f\x71\xd0\x8c\xcd\x3f\x0e\x57\xaf\xae\xa0\x54\x39\xf8\x53\xda\x40\xda\x15\xc2\x81\x1a\x87\x4d\xd4\x7f\xbb\x72\x98\x73\x9e\xdf\x32\x76\x27\xa6\x67\x30\xef\xab\x54\x6d\x01\xeb\x1b\xa9\xca\xfc\x8e\xa9\x3a\x87\x7a\x5f\xae\xb5\xc3\x40\x6f\xa4\x31\xf1\x3a\xa6\x6d\x1f\xee\xbc\x4a\x49\x86\x28\x6f\xa4\x67\x60\x37\x52\xd5\xeb\x94\xcb\x72\xc0\x25\x86\xdf\xc3\x45\x90\x19\x7a\x12\x95\xb3\x43\x16\xeb\x68\x59\x28\x63\xa8\x0d\xf6\x6b\xef\x12\x7e\x32\x4b\x06\xe9\x26\xf9\x53\xa5\xca\x43\xc5\xf0\x5f\x1c\x1f\x9c\xda\xd1\x36\xac\xef\x01\x5e\xc2\x6e\x02\x1b\x02\x1c\x22\x14\x5c\x1f\xf3\x09\xd8\xa0\xe7\xca\x1e\x22\x54\xd9\x69\xf3\xba\x27\x2e\x6a\xb9\x7d\xfc\xd0\x0e\xeb\x57\x82\x27\xe7\xad\xd9\xfe\xdd\x89\xf3\xd6\x5e\x77\x40\xbf\xd2\xa6\xb5\x98\x7a\x97\x18\x2c\xb5\x40\x97\xce\xfe\x6a\xad\x68\x06\x85\x02\x00\x93\x6e\x25\x4d\xae\x13\xcc\x1f\xc9\x8f\x02\xb3\xfe\xed\x80\xbb\x6e\xe0\x72\xbb\x75\xeb\xf1\xe1\xed\x01\x9d\x52\x07\xcc\x42\xa3\xa7\x93\xd4\x5c\xa5\x6a\x69\x68\xf8\x5f\x5e\x4d\x5e\x2e\x8d\x38\xc6\xfe\x66\x02\xfc\x7c\xf0\x7a\xd2\x66\x5f\x61\xac\x77\xb8\xcb\x42\x34\x9c\x6e\x1d\x69\x78\xf3\x82\xce\x41\x7f\x29\x1e\xb5\xa8\x74\x12\xef\xbb\xe5\xe5\x82\x2f\x41\x26\x4e\xd3\xde\x80\xaf\x24\xe5\x1b\x96\x21\x07\x24\x69\x49\x22\x1f\x92\x66\x05\x75\x77\x6c\xed\x1d\xa6\xba\xa4\x99\x4f\x99\xd9\x76\xe3\xd8\xc6\xfb\xb8\xeb\x36\x43\x45\xfb\xc7\xd7\x39\x4d\x3b\x9a\x10\x78\x27\x80\xbd\x9b\x7c\x2c\x57\x3e\xff\xf1\xfc\xfa\x03\x0c\x40\xae\x78\x98\x3c\x30\xa0\xff\x6b\x1f\xba\x54\xe0\xed\xad\xf0\x5d\x2b\x37\x72\xbf\x1f\xf6\x8f\x6e\xaf\x47\x0a\x3c\xf0\x86\x75\xc5\x17\x49\x53\x25\xd5\xc1\xcf\x93\xaa\xa9\x2f\xb0\x83\xfd\xa6\x05\x05\x93\x55\xd3\x8e\xf9\xae\x60\x06\x80\xe1\xf9\x2a\x61\x0e\x5c\x20\xff\x5c\x41\x61\xbb\xca\xe8\x29\x32\x28\x8e\xc2\x8e\x4b\x63\x20\x79\xb0\x72\x9d\xe7\xd8\xbc\x94\xb3\x5a\x8f\xeb\xe5\xe0\x8e\xab\x2b\x9b\x90\x79\x63\x12\xca\xc3\x57\x22\xa1\x89\x0c\x79\xcb\x7c\x61\xd4\x31\xcc\x17\xbe\xcf\xfb\x01\xf9\xd2\x17\xf8\xe2\x7c\x69\xb1\x16\xe7\xcb\x10\xb4\x3d\x9f\x2e\xcc\xe0\x0d\xd2\x65\x20\xf9\xff\x26\x5d\x7a\xb7\xa5\x3f\x32\x5d\x02\x94\xea\xc1\x94\xfe\x35\x7a\x9b\x2d\xed\xe5\xdc\x7f\x0b\x55\x3a\x79\x93\x38\x25\xea\x4b\x5f\xc1\x5d\x55\xe5\x1e\x8c\x4c\x62\xcd\xf6\x63\xc0\x00\x57\x76\xd6\x62\xdf\x17\xe8\x83\xe0\xa0\xed\x0a\x70\x00\x5c\x4e\x45\x80\x19\x7d\xed\xe9\xf4\xad\x73\x9c\xdb\x49\x0e\x3b\xc1\x60\x1a\xce\xc1\x9e\xf7\x02\x07\x52\x74\xc4\x1e\xfe\x04\x32\x30\xe7\x08\x19\xf4\x3e\x91\x7c\x92\x8f\x37\x55\x63\xc5\x5d\x2e\xc3\xd7\x92\xb1\x9e\x89\xfb\x26\x36\xe6\xb8\x22\x71\x1d\x98\xa6\xee\x7d\x00\xf5\x8f\xf9\xfe\xf8\x57\xb5\x23\xe7\x87\x23\x71\xe8\x81\x17\x5f\x33\xaf\xba\xda\x9c\xfb\x0e\x39\xe1\x91\xe0\xcb\x09\xa7\x1c\x3d\xc9\x4c\xdf\x0c\xf3\x5d\x1d\xc2\xe3\xde\xd7\x53\x72\x47\x0b\xfb\x6d\x85\xb8\x85\xd6\xa9\xaa\xe8\x13\x59\x85\x02\xe1\xd7\x2f\x5f\x3e\xd3\x56\xba\x0f\xbd\x93\xf4\x8d\x22\x83\x4c\x69\x99\xda\xfc\x89\xae\x01\x9c\x47\xff\x42\x87\x8f\xf2\xba\xcc\x9c\x80\x68\x79\xf9\xbb\x8b\x8b\x0b\x3c\x87\x88\x5a\x79\x48\x1e\xe1\x81\xe4\xd4\xd3\x03\xa6\xe5\xa0\xf0\x77\xdd\x59\x6a\x3e\x4c\x31\x65\xea\xc5\x6c\x9e\x8e\x53\xff\xb9\xaf\x9c\x1c\x0e\x82\x74\x61\x67\xe4\xae\x4c\x16\xff\x09\x00\x00\xff\xff\xde\x7b\x70\x59\x0d\x21\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 8461, mode: os.FileMode(420), modTime: time.Unix(1448230462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x95\x4d\x6f\x9c\x30\x10\x86\xef\xfc\x8a\x11\x4a\x25\xa8\xb6\xec\xbd\x52\x0e\xe9\x97\x1a\x55\x4a\x56\x4d\xa5\x9e\x27\x30\x80\xb5\x60\x13\xdb\x64\xbb\x45\xfe\xef\x1d\xf3\x11\xd8\x36\x51\x36\xd9\x43\x4f\x18\xf3\xce\x78\xe6\x79\x6d\xd3\x60\xba\xc5\x82\xa0\x46\x21\x83\x40\xd4\x8d\xd2\x16\xa2\x00\x20\x2c\x84\x2d\xdb\xdb\x24\x55\xf5\xba\x50\xef\xcc\x0e\x8b\x82\xf4\x72\x48\x5a\x2b\x6d\xc2\xa3\xb4\xa5\xb5\xcd\x56\xd8\x17\x89\xd7\xb5\xc8\xb2\x8a\x76\xa8\x29\x0c\x38\xb0\xeb\x34\x4a\x2e\x35\xf9\x44\x39\xb6\x95\xbd\xec\x8b\x35\xce\x75\x5d\xa3\x85\xb4\x39\x84\x6f\xee\x42\x48\x9c\xeb\xc5\x24\xb3\x71\x34\x84\x9d\x6d\x69\xbf\x82\xb3\x7b\xac\x5a\x82\xf7\xe7\x90\x2c\xe2\xfd\x37\xe7\x58\x0a\xcb\x4c\x83\xf6\x20\x5d\x1c\x04\xeb\x35\xfc\x28\x85\x81\x5c\x54\x04\xfc\x34\x98\x13\x58\x05\x94\x09\x9b\xc0\xb5\x4c\x79\xd6\x02\xfd\x12\xc6\x1a\x3f\xda\x89\xaa\x02\xa9\x2c\xdc\x12\xa8\x7b\xd2\x3b\x2d\xac\x25\x86\x9d\xb7\x32\x85\x54\xc9\x5c\x14\xad\xa6\x8b\xcd\x65\x84\x8d\x80\xb7\x5d\x97\x6c\x06\x53\x9c\x4b\x7c\x45\x68\x52\xac\xc4\x6f\x6e\xfc\x0a\x6b\x02\xe7\x58\x1a\x43\xc7\x55\x71\x29\x0f\xf1\x60\x4b\x02\x9f\xa0\x24\x4d\xfc\x8d\x87\xc9\x0d\xe9\x7b\xfa\xec\x6d\x82\x73\x18\xec\x5a\xcc\x0d\x4c\x61\x84\xfa\x51\x49\xd3\xd6\x64\xc0\xf3\x00\x91\xf7\x7c\x2a\xaa\x49\x5a\xb4\x42\x49\x9e\xf7\x29\x1f\x2d\x68\x8c\xf5\xab\xf0\xf7\x7f\x03\xa3\x78\x40\x58\x19\x3a\x2e\xcb\xb8\x03\xa6\xa2\xf4\x17\x46\x15\x79\x5e\x91\x06\xa1\x92\xef\x84\x19\xe9\x15\x58\xd4\x05\x59\x60\xc7\x48\xe7\x98\x52\xe7\xe2\xa1\xcd\x9e\x0e\x80\x26\xdb\x6a\x39\x75\x7e\xa5\xec\x43\x65\x94\x45\x21\x83\xf6\x2b\xb3\xef\xe9\xb4\x72\x89\xa6\xb7\x6a\x4f\xde\x2e\x92\x20\xe6\x80\xd0\x37\xe1\xe2\xe5\xc6\x9a\x47\x13\xc5\x8d\x56\x59\x9b\xbe\x8e\xe2\x18\x7b\x22\xc5\x45\x96\x89\xe2\x34\x35\x53\xdc\x79\x8a\x3f\x79\x23\x7a\x8a\x19\x5a\x3c\x9d\x61\x33\xad\xfb\x6a\x86\x23\xc2\x1b\x4a\x5b\xae\x6c\xcf\xa7\x5c\x48\xe1\x7b\x37\xa3\xa0\xc7\x69\x3e\xa0\x11\xe9\x45\x6b\xcb\x7e\xf6\x49\x0e\x5e\xc1\x0c\xfa\x76\x5b\xc3\x75\x19\xcb\x47\xbb\x58\x79\xa9\x19\x5f\x62\x88\xfa\xac\xbe\xdc\x08\xe8\xce\xfb\x27\x64\x2a\x1a\xac\x20\x5c\x10\x09\x21\x76\x8e\x0f\x26\x70\xb1\xbd\xb3\xb3\xce\xb9\xd5\xc0\x26\x3e\xe4\x25\x45\xb5\x7a\x0a\xda\xad\xef\x00\xd0\x17\xf8\x3c\xac\x19\xd2\x04\x80\x8f\xff\x37\xda\xbf\x8c\x80\x55\x5b\x4e\xfe\x5f\xbb\xf6\x77\x13\x5f\xb3\x43\xdf\xf3\xbe\xc9\xb5\xaa\xfd\xeb\x8d\x6a\x75\xea\x27\x5e\x82\xe4\xf1\x1d\x74\xdd\x90\xc6\x71\xe3\x3c\x49\xe7\x2b\x4a\xfe\xb9\x0c\x87\xed\xb9\x0b\x77\xd4\xce\xe7\x67\xb0\x62\x83\x1a\x6b\x5e\xa3\xe9\x9f\x47\xe4\x19\x02\x96\x76\x72\x62\x48\xbc\x51\x4a\xb3\x30\x9b\x73\xae\x0e\x5d\x9f\x25\xbc\xdc\x83\x5b\xa7\xdb\x38\x2e\x12\xc3\xfc\xaf\xe5\xdb\xd5\x34\x4a\xf2\x05\x7b\xe8\xed\x42\xf1\xb7\xb5\x6a\x02\xbe\xf0\xf5\x88\x6b\x60\xe1\x9e\x0b\xfe\x04\x00\x00\xff\xff\x5a\x98\xb0\xcd\x89\x08\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2185, mode: os.FileMode(420), modTime: time.Unix(1447613026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerDocGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xcb\x6e\xea\x30\x10\xdd\xfb\x2b\x66\x8d\x74\xcd\x3e\xba\xea\xa2\x0f\xa9\x95\x68\x41\x85\x76\x6f\x25\x13\xb0\x4a\x1c\x64\x87\xa2\x16\xe5\xdf\xeb\x77\x1c\x43\x2a\x95\x0d\x9e\x33\xe7\x61\x8f\x0d\xf3\xd9\x8a\x95\x1f\x6c\x8b\xd0\x30\x2e\xe0\x7c\x06\x5e\x03\x7d\x12\x75\x4b\x37\xbc\xdb\x23\xf4\xbd\xc6\x2e\x00\xdc\x2b\xbf\xda\x1d\x1b\x26\xf8\x37\x02\x7d\x61\x8d\xc3\x50\x54\xb6\x15\x9d\xee\x51\x95\x92\x1f\x3a\xde\x0a\x4d\x20\x24\x3a\x66\x0d\x63\x2c\x2a\x18\x8b\x37\x28\x1b\xb5\xac\xd7\x28\x3f\x79\x69\x02\x88\x45\x60\x59\x83\xc7\x8a\xc4\xf1\x92\x9d\x99\xb6\x12\xe8\xba\xdc\x61\x83\x0a\xe8\x63\xab\x3a\xa0\xb7\x4c\xe1\x8a\x75\x3b\x67\xe1\x35\x26\x3f\xf0\x34\x02\xfa\xe3\xcb\xc2\x4c\x49\x32\xa1\x67\x96\x33\x40\xb7\xa8\x1b\x50\x88\x1c\x1d\xc8\xe6\x79\xae\x59\x5b\xab\x80\xe6\xe4\xb8\x2d\x2f\x08\xb5\x13\x25\x5d\x27\xb4\xdf\x27\x9e\x1c\xc3\xfb\xbc\xa3\x54\x7e\xc0\xc6\xc6\x97\xce\x65\xe8\xe5\xe9\x0b\x3d\x3e\x61\x2f\xd9\xaa\x7c\x59\xc0\xb8\x3d\x5c\xfa\x18\xea\x7b\x98\x30\xa4\x6f\xaf\x8b\x4c\x10\x91\xeb\x43\xbb\x6b\x45\xc7\xca\x38\x37\x5f\xc6\x9d\xf8\x3a\xdd\xc9\x25\x74\xcd\x90\x3e\xe8\x27\xbf\xd7\xf0\xff\x54\x13\xc0\x9b\x29\x95\xdb\x2d\xa4\x9a\x5f\x0e\x90\x5b\xa8\xa3\x7f\x2e\xe1\x2c\x16\x28\x86\x17\x95\x72\x0c\xe5\x9f\x4d\x7a\xc6\x8a\xb3\xcd\xd7\x21\xde\xc7\x64\xc6\x4a\xb6\xd5\xb1\x4c\x32\x02\x90\x64\xa4\x9c\x3f\x65\x0c\x3f\x26\xa2\x4e\x6c\xbb\x45\x59\x34\xd8\x31\x32\x9b\x93\x43\xf2\x37\x42\x08\xf9\x09\x00\x00\xff\xff\x19\xe0\xb9\xc4\x58\x04\x00\x00")

func templatesServerDocGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerDocGotmpl,
		"templates/server/doc.gotmpl",
	)
}

func templatesServerDocGotmpl() (*asset, error) {
	bytes, err := templatesServerDocGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/doc.gotmpl", size: 1112, mode: os.FileMode(420), modTime: time.Unix(1448230462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5f\x6f\xdb\xc8\x11\x7f\x16\x3f\xc5\x1c\x7b\xb9\x92\x07\x6b\x75\x46\xd1\x87\xaa\xf0\x83\xe1\x4b\x10\x35\xbe\x44\x88\x8c\x43\x8b\x34\x50\xd6\xe4\x88\xda\x86\xda\x65\x76\x97\x56\x54\x41\xdf\xbd\x33\x4b\x4a\xa2\x6c\xea\x9c\x5e\x51\x02\xb6\xa4\xd9\xd9\xf9\xf3\x9b\xbf\xac\x64\xf6\x59\x16\x08\x2b\xa9\x74\x14\xa9\x55\x65\xac\x87\x24\x02\x88\x4b\x53\xc4\xfc\x69\x5c\xf8\xd0\xe8\x47\x4b\xef\xab\x38\xe2\x5f\x85\xf2\xcb\xfa\x5e\x64\x66\x35\x2a\xcc\xd0\xad\x65\x51\xa0\xed\x7e\x75\x15\x66\x71\x34\xe8\x32\xfe\x0b\x9d\xc3\x87\xfc\x33\xb3\x2d\x4a\x59\xb8\x47\xe7\x7e\x53\xa2\xbd\x1f\x15\x56\x66\xb8\xa8\xcb\xa0\x68\xbb\xb5\x52\x93\x79\xe2\x67\x5c\xc8\xba\xf4\x93\x60\xa0\xdb\xed\xb6\xdb\xca\x2a\xed\x17\x10\xbf\xf8\x12\x83\xd8\xed\x02\x33\xea\xbc\xfd\xd6\x5c\xfb\xfe\x33\x6e\x2e\xe0\xfb\x07\x59\xd6\x08\xe3\x2b\x10\x9d\xfb\x7c\xb6\xdb\x11\x2b\x74\x25\x35\xbc\x27\xe2\xd2\x28\x1a\x8d\xe0\x6e\xa9\x1c\x2c\x54\x89\xb0\x96\x0e\x0a\xd4\x68\xa5\xc7\x1c\xee\x37\xe0\x97\x08\xad\xdf\xe0\x8d\x29\x05\xf3\xff\x22\x3f\x13\xb5\xb6\x08\xda\x78\x22\x83\x79\x40\xbb\xb6\xca\x23\xf1\xef\x45\xc9\x85\xa7\x3b\x1b\x53\x77\x04\x2a\x0f\xf7\x98\xc9\xda\xd1\x71\x59\xf2\xa1\x05\xcc\x95\x77\xb0\x36\x75\x49\x0a\x11\x4a\xe3\xfc\x77\xac\x64\xe2\x5b\xa2\xd1\xe5\x86\x4f\xf6\x4a\x3c\x6a\x50\x8b\x20\x19\xbf\x56\xa5\xca\x94\x27\x06\x0e\x8a\x5a\x6c\x60\x38\x54\x3a\x2b\xeb\x1c\x87\x1c\x76\x58\x18\x1b\x7c\xd8\xdb\x10\xf4\x12\xcd\xd5\x55\x48\x07\x0a\xce\x4a\xea\xdc\x91\xc6\xc2\x8c\x0f\x5c\x7b\x97\x8f\x04\xb4\xa4\x1e\x86\x1e\x84\x18\x09\x01\xc3\xeb\x80\xae\x74\x99\x2c\xd5\xbf\x29\x88\x6f\xe5\x0a\x81\xb1\x67\xdb\xc4\x94\x60\xcf\x54\x25\xcb\x40\x22\x0a\x03\x95\x00\x7e\xe9\x1e\xc5\x14\x1a\xb4\x0b\x4a\x89\xed\x2e\x86\x94\x02\x36\x1c\x56\x87\xd3\xed\xf6\xc8\xca\x42\x42\xc0\xf6\x71\x8b\x1e\xa4\x05\x53\x11\x70\xce\xdb\x3a\xf3\xb0\x85\x46\x73\xb2\x94\x6e\xa2\x1d\x66\x1c\x1d\x31\xcb\x96\xb8\x42\x97\x92\x15\xd1\xe0\x35\x21\xcb\xec\x4a\x17\xf0\xa9\x34\xba\x18\xc7\x4b\x22\xc5\x90\xa3\xcb\xac\xaa\xbc\x32\x7a\x1c\x33\x58\x93\x29\x07\xb5\x54\x8e\xa1\x36\x9a\x39\x42\x86\x8e\xa9\x70\xc8\xdf\xe6\x16\xea\x87\x71\xfc\xfa\xdd\xec\x2e\xfe\x14\x0d\xa6\x8c\x25\xb9\x03\xf4\xb4\xb2\x19\xde\x1e\xd9\x01\xf5\xae\xf4\x10\x22\xb5\x37\x39\x33\x5a\x63\xc6\xec\xee\x62\xaf\xd6\x31\xbf\x04\x4a\xfb\xdc\xac\x20\x24\x71\xab\x7e\xfa\xee\x3d\xa9\x27\xcf\x09\x95\x03\xf8\x0c\xc1\xac\x07\x80\x68\x70\x77\x3b\x0b\x20\x1c\x9f\x16\x8e\xfd\xd3\x9a\xee\x4b\x37\xfc\x36\x68\x9a\xfc\x2a\xc9\xd6\xf5\x92\x08\x1c\xe5\x26\x11\x55\xc8\xf6\x3f\xba\xa6\x80\x38\x37\xa8\xb2\x86\xc3\x0e\x74\x64\xcc\x7c\x0f\x1f\x7d\x0f\x08\x1e\x9f\x16\xcb\x1e\xc3\xfe\x2b\x5c\x7f\x17\xaa\x6c\x59\x83\x6c\xb0\xec\x06\xad\x27\x87\x32\x2e\x03\x7a\x42\x7b\x13\xaf\xa8\xc4\x35\xbb\xd5\xb1\x2c\x3b\x32\xf6\x18\xd8\x39\x65\xcd\xdc\x03\xfa\x2d\x8c\xc1\xe2\x97\x5a\x59\xcc\xe9\xa2\x3d\xb1\xea\xe6\xe5\xfb\xbb\xc9\xab\xc9\xcd\xf5\xdd\xcb\xa7\xc6\xbd\xc1\xcd\x6f\x18\x47\x1d\xb1\x0f\x35\xab\x1e\xd8\x20\x3a\xed\x37\xea\x79\x9b\xa6\xef\x27\xbf\x92\x3d\xf3\x37\x2f\xff\x11\x7f\x82\x43\x2e\x46\x94\x70\x8b\x5a\x67\x61\xfa\x24\x29\x6c\xa9\xeb\xb6\x5d\x65\x46\x19\x72\x01\x68\x2d\xb7\x6d\x4e\x17\xf1\x16\xd7\xc9\xac\x39\xfc\xdb\xec\xdd\xdb\x0b\x88\xe3\x94\xf8\x29\x99\x99\xeb\xbb\x2b\xd0\xaa\x0c\x12\x80\xfa\x63\x21\x5e\x49\x4f\x6d\x4c\x27\x74\xc8\x6c\x9c\xda\x95\xb4\xd4\xa2\x58\x60\x03\x01\x49\x9c\x06\x52\xf2\x03\xb7\x89\x8b\x96\xdc\x8e\x9a\x74\x7f\x41\xcc\x96\x94\x37\x3f\x1f\x61\x81\xab\xae\x95\x82\xff\x25\xa9\x98\xe8\x85\x11\x77\xd4\x67\xf1\x70\xf1\x96\x90\xfd\xb6\x7b\x1d\x2e\x32\x94\x7c\x9a\x1f\x9c\x6f\x65\x05\x4b\x93\xf4\xaf\xa7\xde\x0e\x06\xc6\x89\x97\x5f\x95\x4f\x2e\xc9\xde\x1d\x8f\x4c\x59\x29\xbe\xc6\xad\xb1\x99\xed\xbb\x1d\x7b\xda\xdb\x89\xaf\xa7\x93\xa4\x63\x12\x03\x45\xf1\x5c\xa8\x82\x22\xcb\x67\x24\x8b\xa6\xdf\x60\x49\xf9\x5f\x36\xc8\x11\x45\xcc\xb8\xcf\x27\x69\xf4\x6c\x37\xe5\x7d\x61\xd6\x0c\x05\xba\xfa\xc3\x7e\xb2\x37\x02\xec\xb6\xf9\x18\x83\xa6\xc8\x32\x6b\x4b\x4f\x4f\x6e\x8a\xd7\xad\xf2\x2b\x68\xcd\x20\x83\x9a\x02\x46\x7b\x00\x89\xb6\x13\x71\x1b\x88\x49\xec\xb3\x2a\xa6\x58\xae\x3c\x21\x1c\x26\x7b\x12\xbf\x70\xe3\x17\x39\x11\x39\xcc\x82\xdb\x5b\xfb\x95\x1b\x4a\x9a\x06\xc0\x1f\xc1\xfa\x24\x85\x18\xdc\x01\x0b\x9d\xb6\x32\x79\xda\x71\x5f\x24\x14\x96\x35\xcd\xc7\x2e\xae\x20\x3d\xb0\x0b\xe3\xd1\xe8\x85\xfb\xa7\x26\xcd\x7b\x8b\xc5\x75\x9e\xdb\x24\x4d\xc3\x7e\xf1\x1b\x9d\xb8\x30\xc0\x95\x11\x8a\x62\x30\x38\x54\x4c\x6b\x28\x79\xdc\x41\xa8\x89\x07\xb9\xfd\x06\xb1\xba\x2e\xd5\x03\xde\xb6\xda\xb6\x07\xb5\xc9\x8f\x0c\xd1\xdd\xcd\x74\x7f\x94\xee\x9e\xe6\x52\x8f\xd7\x83\x67\x06\x06\x55\x56\x92\x1e\x0b\xfa\x1b\xc7\x4c\x88\xaf\xfb\xfd\xa9\xe1\xce\xe6\xc6\xc9\x31\xf7\xbe\x90\xce\x70\x15\x24\x51\x8f\x13\x0d\x21\x3d\xc3\x48\x95\xf2\xd5\x4f\xad\xf1\xc6\xd1\x9d\x0f\x1f\x9b\xd9\xb7\x8d\x99\x79\x74\x29\x2e\x63\x32\x80\xf6\xae\x70\x97\x82\xbb\x5e\xaf\x85\xa1\x7d\xb0\x12\xc6\x16\x23\xa5\x73\xfc\x2a\xaa\x65\x35\xba\xa3\x89\xe1\x78\xda\xcc\x6f\xe5\x06\xed\x9c\x25\x36\x5d\x72\x7e\xb3\x44\xe9\xe7\xb3\x25\xa2\xff\xc3\xfb\xba\xc4\xf9\x70\xfe\x8e\x96\xb7\xf9\xac\x59\xb6\xe6\x33\x6f\xa9\x6b\x84\x1b\x26\x33\xa5\x3b\x67\xe8\x2f\x4a\xff\x8a\xd6\x35\x6d\x85\x1d\x6b\x7f\x11\xc7\xe5\xe5\xb9\x4b\x9d\x49\xc0\xfe\xad\x68\x47\x4d\x3e\x7c\x0c\xb0\x1c\x4f\x2e\xe0\xf2\x2c\x3c\x5d\x01\x1f\x7e\xfa\xd8\xd4\x5f\xa3\xff\xd6\xc8\xfc\xef\x7f\xfe\xe9\x2f\x34\x62\xa6\x52\xd9\xa4\x81\x2e\x09\x75\x76\x3a\x84\xd2\x0b\x38\x7f\x48\xd7\x9f\xa9\xc8\x43\x3d\x3e\xdb\x7f\xe8\x74\xaf\x21\xec\x34\x57\x57\x34\x34\x9a\xae\x79\x42\x3e\xf6\x85\x28\xe4\x7b\x9b\xcc\x03\x72\xeb\xf6\x7f\xe9\x34\xad\x82\xe3\xaf\xff\x77\xbf\x71\xc7\x86\xd3\xb1\xfd\xd0\x73\xa2\xc1\xda\xca\xaa\xa2\xb5\x6b\xdc\xc4\x8c\xe6\xc2\x9e\xa9\xbf\x7f\x74\xa5\xf4\xb4\x90\x0b\xe8\x4d\x93\xa3\x87\x6d\xa3\x72\x27\x9d\xaa\x35\xe2\x69\xff\xe9\x01\xe1\x64\x57\xa0\xca\xeb\xb3\x12\xe8\x75\x2a\x33\x15\xaf\x93\x0b\x4b\x7b\x5a\x58\x27\x7d\x5e\xaa\x7b\xd8\xbf\xb5\x42\xfb\x9e\x7b\x5e\x86\x43\xda\xf6\xc8\x39\x5a\x73\xb0\x1a\x4a\x3e\x03\xaf\x56\x68\x6a\xa2\x53\x91\xc9\x2c\xc3\x8a\xde\xcf\x58\x40\x67\x11\x13\xf4\x0e\x46\x1b\x2c\x2d\x45\xe1\x55\xb0\x11\x77\xad\xf3\xe0\x29\x50\x53\x7a\x44\x22\x8c\xc0\x19\x16\x92\xa3\xcc\x83\xc2\x8e\x34\x48\x50\x14\x02\x32\x7a\xc1\xe3\x50\x97\xb2\xf2\xa6\x82\x95\xca\x87\xb9\x59\xeb\x92\x2a\x2c\x05\x7c\x40\xed\x6b\xc2\x68\xc3\x52\x68\x4e\xc8\xb5\xdc\x88\xc8\x6f\x2a\x3c\xe3\x59\xfb\xf6\x13\x0d\x1e\x07\xf0\xb0\x7f\x25\xa5\xee\xbd\x9b\xc2\x75\x70\x9b\xc6\x50\x92\x85\xd4\xa7\x00\xeb\xa6\x16\xe8\xcf\xd8\x30\x9e\xfc\x71\x53\x2b\xb5\x68\x6e\x90\x96\xa4\x37\xd1\x2d\xfa\xda\x6a\x4e\x6f\xba\x47\x09\xe1\x0f\x4a\x13\x5e\x1a\xd3\x27\xe4\x29\x5a\x65\xf2\xe4\x4f\xf0\x63\x88\x07\x37\xbe\xda\x33\x5f\x23\x09\x58\x3b\x09\x27\x5f\xfe\x13\x00\x00\xff\xff\x7b\xb1\xb6\x44\xcc\x10\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 4300, mode: os.FileMode(420), modTime: time.Unix(1448230462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x57\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\xa6\xc6\x76\x61\x19\x5a\xf9\x9e\x22\x87\x6d\xb7\x45\x72\xe8\x22\xc8\x06\xed\xb1\x60\xa4\x91\x44\x44\x26\x15\x8a\xb4\xe3\x1a\x7e\xf7\x0e\x7f\x64\x49\x8e\x6c\x2f\x50\x24\x87\x05\x72\xa0\xc5\x99\x6f\x66\xbe\xf9\x63\x1a\x96\x3d\xb1\x12\x61\xb7\x83\xf4\x2e\x9c\xf7\xfb\x28\x5a\x2e\xe1\xa1\xe2\x2d\x14\xbc\x46\xd8\xb0\x16\x4a\x14\xa8\x98\xc6\x1c\x1e\xb7\xa0\x2b\x84\x76\xc3\xca\x12\x15\x68\x29\xeb\xd4\xca\xff\x9e\x73\xcd\x45\x49\x97\x9d\xde\x8a\x97\x95\x86\x46\xc9\x35\x42\x61\xb4\x83\xaa\x50\xc0\x56\x1a\x50\xf8\x49\x19\xe1\x90\x3a\x68\xc8\xe4\x6a\xc5\x44\x1e\x45\x7c\xd5\x48\xa5\x61\x1e\x01\xcc\x04\xea\x65\xa5\x75\x33\x8b\xec\xaf\x92\xeb\xca\x3c\xa6\x24\xb9\x2c\xe5\xa7\xe0\xc3\xf0\x68\x45\x9f\xb8\x5e\xae\x78\x9e\xd7\xb8\x61\x0a\x67\xa4\x47\xe1\x29\x26\x28\xb6\xf4\x0b\x16\xcc\xd4\xfa\xd6\x59\x68\x29\x56\xba\x6a\x14\x17\xba\x80\xd9\xcf\xcf\x33\x48\x6d\xf8\x4e\x01\x45\x7e\x38\x7b\xe5\x0f\x4f\xb8\x4d\xe0\xc3\x9a\xd5\x06\xe1\xea\x1a\xd2\x11\x8a\xbd\xa5\x13\x1c\x01\x06\xf1\x23\xd4\xd8\x51\x6c\x45\x59\x9b\xb1\x9a\xff\x4b\xae\x7d\x65\x2b\x2b\x77\x43\x14\xd4\xa8\xfe\x30\x22\x03\x6d\x94\x68\x81\x11\x7b\x22\xd3\x5c\x0a\xd8\x50\xfc\x8e\x34\xe5\xb8\x6d\x79\x29\x18\x09\x21\x90\x41\x49\x82\x84\x58\x19\x22\x71\x08\x08\x95\x47\x8c\xf4\xb6\xc1\xcb\x36\xad\xad\x39\x49\xf1\xc2\x96\x84\x62\xab\x8e\xa5\x57\x5a\xfe\xf6\x10\x94\xd7\x21\x24\x48\x3f\x1b\x5d\x49\x45\xb2\xf9\x00\x23\x81\x23\xd1\xa1\x58\xf7\x4d\x48\xca\x3b\xe0\x33\xe9\x11\x89\x19\x6f\x58\x0d\x33\x0a\x0e\x55\xc1\x32\xdc\xed\x67\x10\x93\xec\x62\x88\x34\x90\x74\xbf\xfd\x45\x0c\x7d\x09\xa4\xf7\xd8\x36\x52\xe4\xc4\x81\xa5\xdd\x47\x0b\xf8\x82\x99\x09\x25\x4b\x84\xe2\xb3\xc1\x56\x3b\xff\x15\x5a\xe2\xed\x0d\xa3\xb3\x55\x6d\x31\xb2\xbc\xc0\xbc\x10\x17\x19\x8c\x83\x01\x22\xb1\xe7\x70\xbf\x6f\x3c\x0f\xef\xc0\x64\x73\xe0\xe3\x5d\x38\x85\x1d\x95\xb6\xa7\x0c\x0a\xf1\xaa\x74\x9a\xb7\x89\xad\x77\x2a\xda\x5f\x6c\x26\x38\x44\x0b\x85\xa4\x99\x55\x31\x0d\x19\x13\xa1\x33\x80\x5a\x94\xe7\xd3\xbd\xe3\xbd\xbf\xdc\x3a\x03\x0b\x96\x8e\x43\x05\xfc\xa0\x6d\xe4\x29\xff\x8a\x9b\xc9\x88\x20\x53\x48\x03\xdd\x4e\x2e\x81\x1b\xb0\x33\x39\xed\x78\xf2\xfc\xe3\x34\xdb\xb2\xb1\x9b\x80\x06\x9d\xef\xb6\x53\xf8\xf3\x4c\xbf\xc0\x62\xe0\xd8\x6f\x92\x42\x7b\xd1\x49\x37\xea\xce\xa6\x2a\x86\xc5\xb4\xd7\x83\x3a\xfe\x38\x29\xb1\x0b\x76\xae\x80\x1c\x48\x42\x92\xd5\x55\x67\x75\xef\x68\x39\x01\x1e\x16\xd4\x95\x92\x46\xfb\x7d\xfb\x27\x52\xda\xf2\xb0\x32\x28\xbf\x34\xd9\x1d\xf1\x61\x53\x3d\xb0\xb2\xed\x2e\x87\x19\xb1\x1f\x32\x02\x1d\xc1\x47\x51\xa8\x85\x6f\x86\x76\xa8\xda\x86\x94\x8e\x7e\xd9\xeb\x2f\xd8\x66\x8a\x37\x6e\x97\x04\xad\xa3\x6f\xc3\x92\xc0\xba\xc5\x63\x35\x0f\xfc\x5a\xc7\x8a\x9e\x28\xf0\xe9\x5c\x7f\xbe\xbb\xed\xf7\x61\xb4\x58\x9e\xe9\x31\x68\xb5\x32\x99\x76\x09\x0a\x29\x98\x4a\xbf\xdf\xb0\xa3\x86\x0b\x87\x73\x53\x77\xb8\x97\x6f\xbe\xa3\x7c\x6c\x92\xfd\x2e\xb0\x44\xdc\x63\x86\x7c\x8d\xaa\xf3\x74\x3a\xfb\x31\x7c\x43\xb5\xc6\x9b\x87\x87\xbb\xb9\x0a\x0d\x71\x1f\x16\xcb\xdf\x8a\x53\x5b\x26\xa0\x60\x11\xbe\xbb\x45\x14\xfb\x72\xb4\xd5\x92\xc0\x3f\xf6\xb9\x31\x61\xae\x8b\x3c\xbd\xb7\x72\xb7\xa2\x90\x73\x15\x47\x3d\x0f\xa3\xc9\x60\xdc\xec\x4c\x00\x95\xba\x04\x77\xd0\x9b\x5b\xc7\x2c\x76\x4c\xa0\x84\x68\x75\x7f\xba\x06\xc1\x6b\xe7\x1e\x9c\x77\xca\x8f\x0b\x8a\x98\x40\x02\x0e\x4d\x19\x99\x9b\x0c\xdb\xa4\x8b\x8d\x20\x63\x07\xe5\x5b\x8f\x8e\xf6\xa9\xb4\x66\x0a\x26\xf7\xd8\x99\x99\x76\x7e\xa4\xf9\x00\x3c\x09\xe3\x18\x7a\x3b\xd7\xc1\xd2\xb9\xc1\xd9\x11\xd9\x17\xbd\xff\x9d\xce\x17\xc7\x26\x63\xa0\x21\xe9\xde\xc3\xf4\x47\x23\xb1\xae\xb7\xfe\x8d\x36\x92\x4a\xe0\xd6\x3e\x92\x57\xbc\xc5\xe1\xb3\x73\x1f\x1d\xbd\x43\x03\xfd\x17\x52\xf7\x2b\x17\xf9\x5f\x76\x9f\x85\x3a\x3a\x64\x30\x79\xd5\x1c\x1f\xa7\x70\xfa\x6d\xe4\x83\x23\x9a\xfa\x65\xf0\xcb\xa8\x00\x6c\x74\x8f\x64\xae\x5b\x92\x6f\x57\x0f\x27\x2a\xda\xcd\xeb\xf6\x14\x23\xa1\x5f\xd3\xd3\xbb\xf8\x44\xf0\x83\x0d\x7b\x28\x0d\x97\x4a\x96\x69\xe3\x92\x18\xde\x0d\x83\x77\xa3\xf3\xd0\x52\xf6\x66\x5e\x0d\x56\xf2\x77\xb8\x32\xfa\xf7\xe5\x7f\x66\x84\xa2\xa1\xa1\xb2\x8f\xfe\x0b\x00\x00\xff\xff\xf7\x6f\xd8\xe2\x2d\x0e\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3629, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x1a\x4d\x73\xdb\x36\xf6\xae\x5f\x81\xd5\xb4\x19\x49\x55\xe9\x1c\x3a\x7b\x70\xeb\xce\x6c\x1c\x6f\xeb\x99\x6c\xea\x8d\xdb\x5c\x92\xcc\x0e\x4c\x42\x12\x26\x24\xa8\x00\xa0\x6d\xc5\xe3\xff\xbe\xef\x01\x20\x08\x82\xd0\x87\x63\x7b\x76\x73\x88\x49\xe0\x7d\xe2\x7d\xe2\x51\x77\x77\xa4\x60\x0b\x2e\x18\x19\xab\x92\xe7\x6c\x4d\x25\xad\xae\x69\xc9\x0b\xaa\x6b\x39\xbe\xbf\x1f\x01\x04\x5f\x90\xec\x2d\x63\x85\xba\xe4\x5f\x19\xb1\x6b\x39\xad\x58\x89\xaf\xd9\x5b\x78\x82\x45\xb3\x77\x7c\x42\xb8\xd0\x7f\xff\x69\x52\x32\x31\x01\xa8\xec\x3d\x2d\x1b\x76\x76\xbb\x96\x4c\x29\x5e\x0b\x80\x9b\x4e\x11\x9d\x89\x82\x74\xc4\xff\xc5\xc5\xb9\x66\x95\xc2\x25\x78\x67\x52\x22\x25\x27\x06\xf3\xdb\x86\xe2\x05\xd5\x2b\x80\x9b\x93\x31\xbe\xbd\xa9\x73\xaa\x2d\xe1\xf1\x9c\x6c\x93\xcb\xec\x84\x5c\xa6\x3f\x1b\x26\x7f\x3b\x21\x82\x97\xe4\x6e\x44\x88\x64\xba\x91\x02\x57\x47\xf7\x09\x01\xe9\xed\x4e\x01\xdd\xf6\xa3\x04\xf4\x54\x1e\x2e\xde\x5f\x82\x7f\x69\xd8\x2e\x09\x03\x88\x43\x84\x4c\xd9\xed\x81\x32\x9d\x89\xa6\xda\x22\x0c\x6e\x7d\xa3\x14\x76\xdd\xd1\x7e\x88\x48\xf6\x29\x70\xf7\xb5\xac\xd7\x4c\xea\x4d\xe4\xf1\x81\x06\xe7\xea\x42\xf2\x8a\x6b\x7e\xcd\x2c\x2a\x9c\xde\xba\x04\x05\x10\xd9\x6d\x04\x88\x99\x05\xea\x9f\xc2\xb9\x3a\x6d\x94\xae\xab\x7f\xd6\xb2\xa2\x5a\x33\x19\x53\xca\xcd\xf6\xc2\x6c\xc7\xa2\x6c\xa1\xf8\x0f\x29\xe9\x26\xa6\x93\x8a\xde\x21\x81\xf6\x14\xda\x43\xb8\xe2\xa2\xf0\xba\x18\xec\xf1\x16\xc8\x8e\x3e\xe2\xb0\xde\x41\x5d\x50\xc9\x84\xb6\xbc\xb2\x73\xd8\xbd\x7d\x4f\x51\xd1\x1c\xad\xae\x6e\xe8\x32\xbb\x5c\x97\x5c\xbf\xda\xd8\x53\x70\xa6\x47\x9c\x1e\xf4\x87\xf4\xfa\x27\xe7\x1e\xa7\x75\x59\xb2\x1c\x1d\xc4\x92\x41\x37\xb1\xb9\xa4\x54\x6c\x0b\x73\x49\x6f\x7a\xfa\x87\x00\xea\xab\x11\x0f\xa2\x6f\x74\x0d\x0b\xd1\xae\x5d\xf8\xad\xfe\x73\xb3\x66\x09\xe4\xf7\xce\x97\xcf\x4a\x56\xa1\xee\x40\x69\xd1\x88\x7c\x12\x81\x61\x36\x8c\xa2\xfe\x74\xc5\xcb\xa2\x8d\x7d\xc3\xc4\xae\x78\x56\x53\x32\x03\xff\xad\xa5\xca\x1c\x13\xf4\x7c\x74\xee\xc8\x03\xd3\xee\x6b\xa9\xa1\xc4\x3e\x1a\x20\x38\x20\x1a\x46\xe0\x63\xb1\x92\x28\xf6\xcb\x9f\x07\xab\xbf\xc4\x2b\xea\xeb\x00\xe8\x87\x1f\x5a\x99\xc0\x03\x80\xb2\xd3\x62\xe8\xef\x7e\x23\x0a\x26\x74\x1c\xbb\x75\x5a\x8b\x6b\x50\xc5\xc4\xc6\x35\x46\xfc\xbc\xcd\x18\xdd\xe9\x84\x30\xf1\x21\x5b\xc7\x09\x3d\x66\x0a\x92\xb9\xbc\x13\x24\x87\x30\x3d\xe0\xf1\x9e\x0b\x73\x6e\x78\xec\x93\x8e\xd3\xae\x9c\x34\x4e\x98\xcb\xa5\xaa\xbd\xf2\x80\x05\xbc\x50\x4e\xb5\xed\xfe\x14\xab\x38\x0f\x8e\xe2\x90\xd4\xdc\xcb\x84\xc8\x9b\x0c\xfd\xfb\x84\xd0\xf5\x1a\x42\x23\xe6\x25\xe7\xc4\x58\x61\x6a\x90\x30\xb8\x8c\x33\x3d\x56\xf8\xdd\x07\x94\xd0\x20\xd2\xe1\xe1\x5a\xec\xe7\x1a\xd6\x05\x93\x45\x3a\xa7\xec\xd2\x6c\x1c\x79\xc3\x4c\x18\xc6\xdc\xd3\xd8\x38\x54\xe4\xd9\xce\x26\xc1\xaa\x4b\x96\x41\x11\x58\xd3\xfc\x33\x5d\x32\x62\xd3\xb3\x7d\x06\x88\xd1\xd1\x11\xf9\x73\xc5\x15\x59\xf0\x92\x91\x1b\xaa\xc8\x92\x09\x26\x41\xc1\x82\x5c\x6d\x88\x5e\x31\x93\xfb\x97\x10\xb3\xba\xae\xcb\x0c\xe1\xcf\x0a\xc8\x00\x62\x09\x9b\x2d\x5e\xc5\x97\x2b\x4d\x20\x9b\x41\x5e\x58\x34\xda\x90\x5a\x31\x41\x36\x75\x03\x3a\xfe\x28\x1b\xd1\xa3\xd4\xb2\x20\x79\x5d\x55\x54\x14\xa3\x11\xaf\xd6\xb5\xd4\x64\x02\x07\x30\x16\x4c\x1f\xad\xb4\x5e\x8f\xf1\x65\xc9\xf5\xaa\xb9\xca\x00\xf0\x68\x59\xff\xe8\x08\x84\x8f\x36\x0d\x1c\x06\x8b\x54\x3f\x73\x7d\xd4\xf6\x30\x0f\xc2\x3a\x0c\x18\xff\x8e\x47\xd6\x8e\x92\x0a\x38\xe4\xec\x35\x5b\xd0\xa6\xd4\xe7\x46\x45\x65\xfd\x14\xca\xb5\xd0\x0b\x32\xfe\xfe\x0b\x38\x5e\xeb\x9d\xce\x68\x01\xee\x77\x9f\xd9\x66\x4e\xbe\x33\x91\x8c\xbe\x98\xf5\x88\xe0\xae\x2b\x3f\x21\x3d\x07\x1e\x51\x9d\x1a\x53\x23\x28\x55\x39\xed\xf5\xae\x17\x18\x06\x0a\x8c\x21\x34\xe5\x42\x11\x5a\x96\xc6\x5c\x57\x75\x03\xb8\x6b\xbb\x8b\x85\x07\x17\x81\xc2\xaa\x01\xa3\x85\x04\x08\x56\x31\x93\x61\x91\x07\x94\x33\x0e\x1c\x4a\xe3\x3d\x10\x8e\xd0\x0b\x90\xfa\x0a\x49\x83\x4f\x2d\x64\x5d\x11\x4a\xf0\x4c\xb3\x77\x0c\xba\x59\xa5\x01\x07\xd1\xdc\x09\x1e\x1b\x7e\x0c\x8a\x84\x4a\x36\xda\x23\x8d\x19\x7b\x97\x1e\x4a\xcb\x26\xd7\x6d\x61\x73\x46\x70\x7b\xbe\x68\xbd\x66\x2a\x97\x7c\xed\xaa\x82\x3d\x99\x68\x31\xcc\x2b\x88\x82\xe2\x72\xc9\x9c\x8d\x00\xa5\x5d\x38\x26\xc0\x91\xc5\xe0\x70\x11\xe0\x95\xed\x9e\x0d\xb4\x7b\x3f\x26\x6d\x6b\x7d\x9b\x97\x8d\x82\x4a\xda\x01\xfe\x42\x42\x22\x01\x85\x01\x6d\x2e\xfa\xb4\xed\x7b\x82\xb6\x07\xfc\x35\xa2\xed\x37\x06\xb4\xc1\x57\xf9\xba\x64\x7f\x2c\x3a\xf2\x6e\x89\xfc\xb1\x38\xb6\x97\xb0\x10\x26\xa1\xf8\x1b\x26\x96\xa6\x00\x7b\xd5\x89\x5d\x72\xe8\x01\x44\x42\xb5\x18\x9b\x8b\x3e\x76\x00\x11\x63\x5f\x98\x76\x45\x78\x5c\xf7\x7e\xec\xd2\x5e\xbb\x99\x10\xd9\xdf\xbb\xbc\xc4\x66\xc5\x0b\xdc\xee\x27\xe4\x8d\x50\x41\xdc\x10\xb5\xdb\x8f\x51\xa3\x0b\x9f\xc1\xb6\x6b\x69\x8f\x0a\xda\x18\x0b\x7c\xee\x14\x0b\x36\x62\x9c\x44\xbf\x6d\x71\xbb\x0d\x62\x77\x2c\xa9\x04\x7c\x94\x99\x86\x71\x47\xfc\xa5\xe6\x6d\x53\x96\xf4\xaa\xc4\xc5\x59\x20\x89\xeb\xb3\x82\x8c\x64\x6a\x13\x46\xfd\x2b\xa8\xbe\x2e\x0f\x40\xbe\x01\x9b\x62\x39\x86\x14\x04\x98\x6d\x96\x86\x37\x28\x22\x06\x64\x4e\xb8\x26\x54\xa9\xa6\x82\x55\xbd\x02\xf1\x20\x13\x83\x1f\xde\x62\x2d\x12\x4b\x45\x38\xbe\x99\x5e\x9e\x12\x57\xa9\x51\x9e\x09\xe4\x84\x45\xa5\x21\x84\x97\x1c\x1e\x37\x53\xdb\x3d\x62\x63\xcf\xe4\x82\xe6\x0c\x45\xc1\x0c\xa7\x0c\x01\xdb\x3a\x29\x64\x76\xc3\x21\x19\x36\x90\xc5\x00\x8d\x9a\x2a\x07\xb9\x69\x55\x17\x04\x33\x9c\x1a\xe1\x75\x81\x98\xca\xfc\x8e\xe5\x0c\x02\x4e\xb6\x67\x32\xdb\x91\xa2\xa6\xa1\xda\x13\x49\x66\x61\x3a\x9c\x13\x59\x37\x50\x1b\x67\x15\x2f\x8a\x92\xdd\x40\xfa\x04\xff\xd3\xf9\x8a\x15\xef\x70\xa3\x95\x1d\xf3\x1b\x5e\x79\xa0\x83\x24\x1f\x3e\x99\x35\xdf\xca\x67\xbf\x53\xf5\xef\x86\xc9\x8d\x4f\x7b\x5f\x94\xb9\x49\x65\x7f\xbd\x7b\x93\x99\x9d\xc9\xd4\x19\xa3\xed\x98\x00\x05\x4d\xee\x31\x7a\xd5\x23\x9d\x4b\x3d\x3f\x51\xeb\xe8\x4e\x6b\xfd\xa1\x93\x01\x56\xfb\x2d\x55\x74\x5e\x19\xda\x3d\x79\x64\x93\x2f\x2a\xfb\x8d\xe9\x70\xd4\x30\x75\x67\x94\x59\x1f\x55\xe9\xd6\x59\x75\xad\x13\xbc\x98\xeb\xc8\xb4\x6b\xa3\xbd\xde\x70\xa7\x01\xaa\x8f\x15\xd2\xca\x63\x4f\xe6\x99\xc5\xfd\x9d\x51\x68\x58\x1f\x2d\x70\x66\xe9\x3c\xb3\xb0\xde\xa5\x8c\x5b\xb8\x35\xe8\x0f\xbb\xb5\x61\x89\x4f\x4f\xd8\xac\xb8\xfe\x56\x29\x8d\x80\x48\xaa\x27\xfd\xd6\x3b\x63\x42\x62\xbc\x3e\xbe\x65\x37\x93\x9f\x5e\xbe\x84\x5b\xa1\x04\xfa\xd8\xd5\x9a\x86\xf6\xe3\x38\x25\xc2\xc7\x31\x59\x50\xd8\x86\x8a\xff\xfd\xf5\xd8\x6a\x6d\xd4\xb6\x1a\x5b\x56\x29\x33\xa4\xd3\xe6\x09\x71\xad\x65\x86\x6a\xdc\xbd\x86\x5c\x75\x9c\x54\x7d\x4e\xac\xf2\xe9\x5d\xbb\x77\x1f\x1d\xff\x63\x3c\x03\x4f\xd6\x5c\x50\x9f\xdc\x31\xfc\x3d\x2d\x28\x28\x81\xb7\x3c\x4f\x02\x49\x0c\xaf\x92\x39\x65\xfb\x80\xea\x09\x63\x02\x2b\x5b\x14\x17\x4f\xa8\xd7\x76\xdb\x3d\xaf\x72\x91\x5d\xbb\x42\x74\xae\x5e\xd5\x85\xb7\xa0\x2b\x59\x57\xb0\x14\x4d\xe6\xc2\x1b\xb7\x15\xe7\xb4\x16\x58\xe7\x65\xfb\x00\xba\x21\xa9\x39\x79\x81\xe8\x07\x4b\xe9\x82\x1c\x24\x50\xec\x0c\x5f\x27\xc9\xd0\x1e\xa7\x47\x45\x3b\x82\xbc\xef\xb1\xd8\x3c\xfc\x67\x30\xad\x48\x35\x06\x66\xa0\x29\xdc\x4d\xfc\xb0\x44\xd1\x8e\x0b\xb6\x0e\x25\x52\xa4\xda\x41\xc5\x64\xaf\x75\x77\x5a\xd8\xfe\xbb\x82\xec\xf8\xd9\xbd\xdd\x8f\xba\xff\x53\xd9\x06\xcd\xf3\x20\xee\x3b\x78\x77\x5c\x44\x38\x9a\xc1\x0f\x53\x00\x38\x25\x27\x27\xe4\xa5\xa7\xf3\x90\xcc\x9b\x6a\x59\x5f\x78\x3e\xa8\x82\xe7\xdf\xba\x73\x2f\x67\xb5\xcf\xa1\x30\xbf\x7a\x59\xfa\x23\xca\x53\xe8\x51\x6b\xc5\x35\xeb\x46\xc1\xd6\x13\x01\x2b\xcb\xb2\x36\x8e\xfa\x83\x5e\xbc\xdf\xe7\x25\xf4\xba\x46\x66\x38\xd6\x49\xa4\xc7\x94\xd8\x81\xf6\xa0\x29\xeb\xb5\x64\xbd\xe8\xbb\xf3\x73\xde\x70\x90\x9b\xfc\xbc\xb1\xa7\xb3\x0d\x44\xeb\x9a\xda\x1d\x25\x85\xde\x60\x03\x0d\xe5\x75\x4e\xec\x57\x12\x73\x4d\x4f\xb5\xe4\xdd\x3c\x1a\x33\xe5\xc4\xa9\xe1\x5b\xb4\x69\xef\x1e\x9e\xf8\x2c\xd5\xee\x5e\x1a\x76\x7b\x3f\x50\x81\x64\x87\x0e\x5e\x43\xfb\xdb\xab\xd5\x8e\x89\x77\x0c\x60\xb3\x6f\x7f\xfc\x6d\x09\xa2\x04\xdf\x34\xe9\xde\x3b\xe3\x0e\xa7\xdb\x8e\x4b\x3b\x61\x1c\x8e\x9f\xc9\x89\xbd\xf5\x0c\x6a\xf2\xd0\x37\xfa\xca\x3a\x7b\x66\x26\xc3\xa2\x60\xbd\xd9\xd6\xa5\x9d\xea\xf8\x72\xe3\x25\xf9\x3f\xd0\x77\x36\x31\x9a\x64\x93\x59\x0f\x7b\x1a\xce\xcc\xb7\x22\x03\x83\x81\x5b\xb8\x6b\x54\x17\xe6\x6a\x6f\x75\x6f\xfd\x36\x1d\x37\x8b\x5d\x25\x79\x87\x87\xf6\x52\x89\x55\x25\xac\x57\xcf\x11\xde\x1f\x3e\x3d\x20\xc0\x95\xfb\x99\x81\x49\x9d\x68\x29\x7f\x7c\xfd\xe0\x36\x70\x41\x8e\xef\x3b\x48\x0b\xbb\xc7\x3b\x06\x7d\x4a\xd0\x9e\xb8\xd9\x2c\x2c\x16\x6c\xf1\xbe\x1d\xb3\x6e\xf9\xda\xd9\x01\xef\xfc\x98\x69\x7c\xbb\x93\xfc\xc5\x0b\xa3\x66\x4b\x3f\x2c\x13\x5b\x9d\xab\x05\x8e\xfb\xf9\x2d\xe7\x01\x76\x0e\xad\x7f\xc8\xc7\x0e\x9f\xc9\xd2\x02\x44\xfd\x45\x7f\xb2\x70\x89\xe4\xfe\xd7\x4e\x3e\xf4\xf2\xfe\x27\x76\xac\x72\x51\x2c\x6e\x91\xfd\x5b\x62\xe1\x20\x8d\xf6\x94\xb8\x03\x3e\x03\x27\xa3\x79\xf0\x4b\x80\xe0\x29\x68\x08\xce\x6e\xb5\xa4\x97\xf9\x8a\x55\xd4\x68\x79\x34\x1b\xf5\x98\x16\x75\x6e\x23\xd6\xf1\x69\xe7\xef\x55\x5d\xb0\xd2\x98\xb1\x9d\xb8\xcf\x8e\xfa\x98\xca\x10\x75\x68\x1d\xef\xff\x06\x00\x00\xff\xff\xe8\xf6\x0e\xcf\x86\x24\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 9350, mode: os.FileMode(420), modTime: time.Unix(1448082063, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerResponsesGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\x5f\x8f\xa3\x36\x10\x7f\xe7\x53\x4c\xd1\x9d\x94\x44\x59\x72\x7d\xe8\x4b\xda\xab\x54\xdd\x9d\xda\x95\xda\xee\x6a\xef\xaa\xbe\x9e\x17\x06\xf0\x2d\xd8\xc4\x98\x64\xd3\x88\xef\xde\xb1\x31\x04\x13\xd2\xdd\x3e\x25\xcc\xfc\xe6\x37\x7f\x3c\x33\xf6\xe9\x04\x09\xa6\x5c\x20\x84\x35\xaa\x3d\x2a\x85\x75\x25\x45\x8d\x21\xb4\xed\x66\x45\x6a\x9e\x42\xf4\x11\xeb\x58\xf1\x4a\x73\x29\x48\x4c\xc2\x8a\xd5\x31\x2b\xf8\x3f\x08\xd1\x9f\xac\x44\x12\x02\x49\x2f\x70\x58\xd4\xf8\x1f\xf8\xbc\x29\x99\x18\x0b\xc9\x42\x24\x6d\x1b\x04\xf5\x81\x65\x19\xaa\x6d\x1f\x8d\x41\xc7\x84\xf1\x28\x82\xd5\x26\xd0\xc7\xca\x2a\x67\x1c\xd4\x5a\x35\xb1\x86\x53\x00\x06\xa0\x98\xc8\x48\xf9\x1b\xb2\x04\x55\x6d\x7d\x5d\x66\xb6\xd9\xcc\xa6\x01\x14\x55\xf7\xc7\x98\x3c\xe0\xae\xe1\x0a\x8d\x84\xa8\xc9\xa4\x17\x6c\x81\x3c\xe2\x14\xfe\x07\x7b\xe6\x65\x53\x0e\x68\xf7\xbd\x05\xa7\xff\xf4\x1c\x17\x4d\xcd\xf7\x78\x06\xfe\x04\x63\x92\x11\xc3\x05\x37\x17\x3e\x77\xf7\x3d\xc3\x3d\x00\x7f\x9e\x70\x0f\x8a\x0b\xee\xa6\xd0\xbc\x2a\xf0\x2e\x3d\xd3\x3b\x11\xdc\xa5\xd6\x85\x8f\x99\x49\xfc\x77\x14\x99\xce\xc7\xa9\x43\x27\x72\xe6\x23\xc4\x4c\x6a\x53\x6b\x2e\x7c\xeb\x11\x62\x6a\x7d\xcf\xb4\x46\x25\x06\x5b\xf7\xdd\x19\x9e\x95\x33\x21\xdf\x6a\x2c\x6b\x2f\x62\x2b\x19\x02\xee\xf5\x33\xf1\x4e\x4c\x29\xdc\xb1\xe9\x59\x3f\x35\xfd\x4b\xf0\x5d\x83\xbe\x75\x27\x9b\x74\x54\xd7\xc9\x57\x66\xef\x57\xf9\xc5\xcc\x02\x7d\x7d\xfd\x56\x4b\xb1\x0d\x4f\x27\x7f\x62\xda\x76\x2d\x4b\x4e\x5e\x2a\x7d\x0c\xbf\x76\x5c\x63\x5e\x13\xca\xe7\x38\xc7\x92\x0d\x51\xdc\x52\xc5\x1e\x65\x72\xa4\xaf\x7b\x76\x2c\x24\x4b\x7c\x60\x74\x5b\x7f\x90\x25\x35\xc0\xf3\xdd\xe3\x37\xa4\x61\x6b\xdb\x95\xd7\x5e\x0e\x76\x11\x9b\x21\xbd\x1a\x0d\xcd\x3f\xf9\xfe\x5b\x91\xf6\xa1\x9f\x7f\x2d\x41\xe7\x08\x71\xc1\x51\xe8\x20\x6d\x44\x0c\x0b\xe3\xe0\x01\x63\xa4\xfe\x56\x7d\x25\x56\xb3\x05\x5a\xfa\x6c\x0b\x75\x80\x5c\xeb\x2a\xea\x05\x56\xab\xd6\x50\x29\x99\x34\x31\x2a\xab\x7d\xe2\x3a\xba\x77\x82\xe5\xd5\x35\xd2\x15\x6a\xd8\x53\xb9\x55\x10\xd2\x95\x9c\xd4\xea\xe0\xe0\x8b\x65\xf4\x4b\x92\x98\xb0\x2b\xc5\x85\x4e\x21\x7c\xbb\x0b\x87\x18\xd7\x90\x96\x3a\xfa\xdc\xa9\x16\xe1\xdb\x7d\xb8\x86\x99\x0c\xa3\xf9\x04\x97\x93\xf3\x24\xa7\x36\x29\xe7\xb9\x3b\x35\xdc\x41\xf4\x41\x26\x08\x37\xdf\x13\xea\x87\x77\xef\x8c\x05\xad\x68\x77\x58\x56\x35\x6a\xcf\xe5\xb4\x29\x5e\x3a\x7b\xf2\x4b\xfa\xb9\xa0\xfb\xee\xf9\xee\x3d\x08\x5e\xc0\xc9\x8b\xd5\x5a\xd1\xcd\x03\xdb\xf7\xc3\x09\xf4\x95\xa7\xa3\x9a\x2f\x83\x63\x5c\xfe\x68\x2d\x7b\x5e\xcb\x06\x54\x20\xc1\xe3\x05\x29\x96\xe6\x70\x0a\xd4\xb6\x79\x14\xc6\x92\x18\x8e\x50\xf2\x24\x29\xf0\xc0\x14\xd2\xe5\xc7\x0a\x38\x70\x5a\x22\x3a\xe7\xb5\x35\xbf\x18\x87\x99\x4c\xa1\xf5\xd6\xe8\xd0\xb8\xc3\xff\x8a\xc5\x4f\x2c\x43\xb7\x6f\xba\xff\x6d\xd7\xd8\x5f\xc8\x11\xa4\x9c\xd6\xe8\x81\xd5\x90\xa1\x40\xc5\x34\x5d\x27\x8f\x47\x1b\xa5\xbb\xfa\xa8\xe3\x65\x11\x19\xfc\xa7\x84\x6b\x2e\x32\x1b\x60\x67\x57\xf2\x2c\xd7\xa6\x54\x7b\x84\xb4\xd1\x96\x2a\x47\x01\x47\xd9\x50\x92\x37\xaa\x11\x1e\x53\xef\x02\x62\x59\xd2\x85\x9b\x04\x41\xc0\xcb\x4a\x2a\x0d\x0b\x4a\x35\x14\xa8\x37\xa6\xdf\x43\xf3\x91\x51\x29\x9a\xc7\x88\x90\x9b\x4c\xde\x38\x86\xf1\x5f\x37\x19\xaf\x03\x9b\xdf\xd7\x21\xe9\xac\xa4\xaa\xff\x57\x08\x9b\x3d\xcd\x40\x42\x79\xbd\xce\xaa\x5b\x1d\x61\xe0\xcd\xf1\x47\x4c\x19\xdd\x61\xb7\xb6\x1c\x6e\x37\x7b\xc3\xd9\x2f\xc7\xf1\xa2\xec\x6c\xdf\x3c\xe1\x71\x0d\x6f\x28\x88\x06\x4d\xe7\x46\x1e\x89\xd1\xba\xcd\x3c\xe6\x73\xf0\x09\xeb\x32\x08\xae\xd3\xf6\x3b\xca\x2e\x1b\x82\x99\x95\x59\x98\xd3\xbc\x78\xb0\x9d\xc9\xcf\xd4\xc3\x03\xce\xe6\x39\xac\xd3\x97\xa8\xae\x18\x38\xd2\x73\xb4\xf4\xc2\xd0\x8a\x75\x63\x62\x03\xdc\xac\x7c\xe2\x44\xc6\xf4\x0e\xa3\xf6\x25\x4e\xa3\xef\x1f\x76\x25\xed\x9a\xc2\x4e\xc7\xe8\x31\xe7\x87\x64\x49\x9d\xd9\xd9\xf7\xbf\x01\x00\x00\xff\xff\xf5\x95\x05\xb0\xb1\x0a\x00\x00")

func templatesServerResponsesGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerResponsesGotmpl,
		"templates/server/responses.gotmpl",
	)
}

func templatesServerResponsesGotmpl() (*asset, error) {
	bytes, err := templatesServerResponsesGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/responses.gotmpl", size: 2737, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x8f\xbf\x4e\xc4\x30\x0c\xc6\xf7\x3c\x85\x95\xf1\x04\xcd\xce\xcc\x08\x2c\x20\xc4\xd8\x28\x71\xc1\x28\xff\x94\xb8\x12\xe5\x94\x77\xc7\xbd\x83\xa3\x7d\x83\xdb\x9c\xef\xf7\xb3\xa3\xef\x78\x04\x8f\x13\x25\x04\xdd\xb8\xce\x8e\x27\xc2\xe0\x35\xf4\x6e\x0e\x20\x90\x31\x96\x60\x59\xb0\xcf\x4e\x0c\x4a\xef\x1a\x06\xc1\x3b\x56\x6a\x2e\x58\x79\x79\xb5\x81\xbc\x65\xca\xe9\x3e\xbb\xe7\x3f\xbb\x77\x38\x18\x25\x0b\xc5\x36\x27\xc6\x37\xc2\xf0\x64\x23\x4a\xbe\xbb\xd2\xdc\x07\x46\xfb\xb2\x14\x3c\x7f\x01\xe3\x67\xcb\xe9\x4e\x8b\x74\xf2\x25\xba\xc9\x91\xd6\x05\x5e\xd6\x94\x26\x18\xde\x1e\x1f\x7e\x19\x7c\xc5\x70\x96\xff\xb3\xf5\x89\xc9\xcb\x34\xaa\xcb\xa8\x36\xa5\x79\x2e\x01\x2f\x9d\xd5\xf5\x94\xbe\xd5\x23\x18\x03\x6e\x6e\x9c\x23\x34\xac\x74\x3a\x52\x37\x35\x7e\x02\x00\x00\xff\xff\x99\xb1\xe6\xc1\xbc\x01\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 444, mode: os.FileMode(420), modTime: time.Unix(1447613026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSwagger_json_embedGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xcb\x6e\x83\x30\x10\x45\xf7\xfe\x8a\x2b\x94\x4a\x89\xd4\x92\x7d\xa5\xec\xda\x45\x2b\xf5\xa1\xa6\x3f\xe0\xe0\x01\xdc\x60\x9b\xfa\x41\x84\x22\xfe\xbd\x03\x09\x52\xc9\x6e\xc4\x1c\x1f\xe6\xce\xb4\xb2\x38\xca\x8a\x70\x3e\x23\xff\xbc\xd6\xc3\x20\xc4\x76\x8b\xef\x5a\x07\x94\xba\x21\x9c\x64\x40\x45\x96\xbc\x8c\xa4\x70\xe8\x11\x6b\x42\x38\xc9\xaa\x22\x8f\xe8\x5c\x93\x8f\xfc\xb3\xd2\x51\xdb\x8a\x9b\xf3\x3b\xa3\xab\x3a\xa2\xf5\xae\x23\x94\x29\x4e\xaa\x9a\x2c\x7a\x97\xe0\xe9\xc1\x27\xbb\x30\xcd\xbf\x40\xe1\x8c\x91\x56\x09\xa1\x4d\xeb\x7c\xc4\x5a\x00\x19\xd9\xc2\x29\xf6\x6f\x7f\x82\xb3\x99\xe0\x4f\x3c\xb3\x97\x96\x07\xce\x9f\xa8\x94\xa9\x89\x2f\x13\x1e\x38\x00\xb7\x5a\xaf\x6d\x2c\x91\xdd\xfd\x66\xc8\x39\xd2\xc4\x93\x55\x98\xeb\xcb\xdb\xd5\x91\xfa\x7b\xac\x3a\xd9\x24\xc2\xe3\x0e\xf9\x42\x32\x76\xb9\xc2\x8d\xef\x8a\xdf\x58\x37\xd3\xda\xf6\x97\x34\xaf\xfb\x8f\x77\x90\x39\x90\x52\xbc\xb3\x8e\x7c\xd0\xce\xc2\x95\x8b\xc4\xca\x15\xc9\x90\x8d\x48\x81\x21\x19\xe7\x15\x8c\x68\xd4\x86\x44\x27\xfd\x42\xb8\xc3\x98\x3e\xff\x92\xa7\x37\x0a\x81\x8f\xb5\x1e\x0f\xf7\x9f\x18\x86\x8d\xf8\x0b\x00\x00\xff\xff\x3a\xba\xd6\x9f\xd5\x01\x00\x00")

func templatesSwagger_json_embedGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSwagger_json_embedGotmpl,
		"templates/swagger_json_embed.gotmpl",
	)
}

func templatesSwagger_json_embedGotmpl() (*asset, error) {
	bytes, err := templatesSwagger_json_embedGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/swagger_json_embed.gotmpl", size: 469, mode: os.FileMode(420), modTime: time.Unix(1448080953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\xcc\x2f\x8a\x22\xfb\x57\xcb\x11\x3d\xa6\xa2\x52\x0f\x3d\x50\x09\x5a\x25\x6d\x2f\x08\x55\x03\x1e\x87\x8d\x96\xb5\xb5\xbb\xa6\x50\xcb\xdf\xbd\xb3\xbb\x06\x4c\x30\x6d\x73\x88\xf0\xfc\x7b\x6f\xde\xcc\x4e\xd3\x40\x4e\x85\x50\x04\x37\xb6\xae\x24\x3d\x91\x16\x28\xc5\x2f\xd2\x37\xd0\xb6\xd1\xfd\x3d\x7c\x53\x1b\xd4\x66\x8d\xf2\xd3\xd3\xe7\x19\xd4\x87\x2f\x03\x76\x2d\xf8\x9f\x4b\x02\xbb\xaf\x08\x0a\x5d\x6e\x00\xc1\x87\xa1\xd6\xb8\x8f\x8a\x5a\xad\x20\x6e\x9a\xec\x91\x56\x24\xb6\xa4\x67\xb8\xa1\xb6\x85\xff\x19\xb5\x42\xb3\xf2\x40\x90\x39\x2b\x83\x25\xe7\x50\x71\x8e\x16\x61\xbe\x58\xee\x2d\x25\x40\x5a\x97\x1a\x9a\x08\x80\x29\x19\x8b\xcf\x04\xa3\x14\x9e\xc9\x32\x0d\x0a\x70\xb0\xac\x2d\xbc\xd4\xa6\x67\xe2\xf0\x2d\xea\x10\x3f\xe2\x5a\x2f\xa6\x54\xd9\x23\xfe\x9c\x92\x31\x6c\x62\xb7\x28\x5c\x69\x78\x18\x83\xf7\x1d\x19\x78\xf4\x14\xee\x42\x6a\xf2\xce\x47\xfd\x37\x06\x25\xa4\x67\x01\xa0\xc9\xd6\x5a\x39\x3b\x7f\xb6\x7d\x62\x6f\xb9\x3d\xae\x9b\x7d\xc8\x73\x61\x45\xa9\x50\x4e\x2c\x6d\x8c\xd3\x33\xf0\x91\x68\xec\x44\xe5\xb4\x03\xa1\x2c\xdb\x38\x9e\x54\x1e\xfc\xfc\x5b\xa3\xe2\x2a\xb7\x22\xdf\xa5\x70\xbb\x45\xe9\xd8\x65\x5f\x74\x59\x91\xb6\x82\x5c\x1d\xae\x2e\x49\xc5\x1d\x39\x78\xef\xb2\x5c\x3c\xbb\x3a\x76\x57\xfb\x0a\x39\xf3\x53\xc2\x22\x85\xc0\x57\x95\xd6\xc3\x65\x13\x33\xab\xa5\xc4\xa5\x74\x53\xb9\x3b\x92\x73\x29\xce\xdd\x1f\x26\x9b\xb3\xb3\x61\xfa\x88\xc3\x40\x07\x54\x7b\xa5\x1b\x2b\x17\xc0\x6f\x87\xd5\x82\x9e\x56\xe3\x5e\x97\x4d\xc3\x9c\x7c\x44\x7b\xa9\xdf\x55\xed\x2f\x64\x3b\x16\x7f\x33\xea\xf8\x15\xbc\x65\x3f\x52\xe8\x54\x0f\x93\xe8\x24\xeb\x05\x3f\x2c\x8e\xed\xb8\x79\xda\x12\xf3\xdc\x21\x33\x54\x25\xd1\xf2\x63\x32\xab\x35\x6d\xf0\x2b\xbf\x8b\x9b\x2b\x64\xfe\x38\x25\xc6\xe7\xe5\xf3\x75\x87\x55\xbc\xd0\x31\x28\xe1\xfe\x98\x47\xf6\x1d\x65\x4d\x1f\x77\x95\xe6\x45\x67\x60\xb7\x17\x63\xc0\xaa\x62\x99\xe2\x61\x7f\x1a\xba\x48\xa2\x43\xa9\x33\x61\x3b\x30\x66\x10\xb5\x91\xbb\x0a\xd3\xde\x4d\xb8\x7a\x11\x78\xbb\xcb\x7f\xbb\x08\x57\x0e\x42\x0f\x25\x4e\x20\x0e\xc7\x20\x0d\xc7\x20\xf1\x5a\xf8\x23\xc1\xfa\xcd\x17\x0c\x46\xba\xc0\x15\x35\x6d\xd3\x7f\x47\xe7\x2f\x67\x10\x28\xed\xb7\x0a\x7f\xdb\xa2\xc3\x8a\x9c\x16\xc4\x29\xfa\x2a\x74\x68\x02\x61\x76\x9e\xf1\x71\x18\xe1\xcc\x6c\x93\x81\x4d\xee\x34\xf7\x9b\x31\xed\x5d\xa5\x84\x47\x70\x8a\xfb\x1d\x00\x00\xff\xff\x84\xe8\x32\x69\xc1\x05\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1442688314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/doc.gotmpl": templatesServerDocGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/server/responses.gotmpl": templatesServerResponsesGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/swagger_json_embed.gotmpl": templatesSwagger_json_embedGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{}},
			"doc.gotmpl": &bintree{templatesServerDocGotmpl, map[string]*bintree{}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{}},
			"responses.gotmpl": &bintree{templatesServerResponsesGotmpl, map[string]*bintree{}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{}},
		"swagger_json_embed.gotmpl": &bintree{templatesSwagger_json_embedGotmpl, map[string]*bintree{}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

